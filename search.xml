<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>sstream+getline</title>
    <url>/2020/11/24/%E5%AD%97%E7%AC%A6%E4%B8%B2---sstream+getline/</url>
    <content><![CDATA[<script src='https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js'></script>

<h1 id="字符串分割神器—sstream-getline"><a href="#字符串分割神器—sstream-getline" class="headerlink" title="字符串分割神器—sstream+getline"></a>字符串分割神器—sstream+getline</h1><h2 id="一些string常用的字符串处理"><a href="#一些string常用的字符串处理" class="headerlink" title="一些string常用的字符串处理"></a>一些string常用的字符串处理</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> s;</span><br><span class="line">s.substr(pos,n);<span class="comment">//截取s中从pos开始（包括0，左边是闭区间）的n个字符的子串，并返回字符串</span></span><br><span class="line">s.find(str s1); <span class="comment">//查找s中第一次出现s1的位置,并返回(包括0)</span></span><br><span class="line">s.copy(<span class="keyword">char</span> * s,<span class="keyword">int</span> n,<span class="keyword">int</span> pos)；</span><br><span class="line"><span class="comment">//返回值为实际拷贝的字符数目；把当前串pos位置开始的n个字符拷贝到s为起始位置的数组中；</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="sstream-getline"><a href="#sstream-getline" class="headerlink" title="sstream+getline"></a>sstream+getline</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sstream&gt;  //头文件</span></span></span><br><span class="line"><span class="comment">//stringstream的特点是，你读入了前面的一部分字符串，对应的字符串流中就会减去那一部分</span></span><br><span class="line"><span class="comment">//(配合getline截断字符使用的话，字符流中也会减去截断字符)，</span></span><br><span class="line"><span class="comment">//所以可以使用while来一直循环读入.</span></span><br></pre></td></tr></table></figure>

<p> <strong>eg. Sample input :</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">/../d<span class="comment">///c</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/11/25/6dD24CNSjpKwZJR.png" alt="img"></p>
<p> <strong>eg. Sample output :</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">..</span><br><span class="line">d</span><br><span class="line">c</span><br></pre></td></tr></table></figure>

<p><strong>在插入vector的过程中,要判断当前小字符串(stemp)是否为空 ; 否则会出现很多空字符 , 如下:</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">..</span><br><span class="line">d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="关于—getline"><a href="#关于—getline" class="headerlink" title="关于—getline()"></a>关于—getline()</h2><blockquote>
<p><strong>在c++中本质有两种 getline 函数</strong></p>
<ol>
<li><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在头文件&lt;iostream&gt;中 , 是iostream类的成员函数 .</span></span><br><span class="line"><span class="function">istream&amp;  <span class="title">getline</span>  <span class="params">(<span class="keyword">char</span>* s,streamsize n)</span></span>;</span><br><span class="line"><span class="comment">//从istream中读取至多n个字符(包括结束标记符)保存在s对应的数组中.</span></span><br><span class="line"><span class="function">istream&amp;  <span class="title">getline</span>  <span class="params">(<span class="keyword">char</span>* s,streamsize n,<span class="keyword">char</span> delim)</span></span>;</span><br><span class="line"><span class="comment">//即使还没读够n个字符，如果遇到delim 或 字数达到限制，则读取终止 . delim不会被保存进s对应的数组中</span></span><br></pre></td></tr></table></figure>
</li>
<li> <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在头文件&lt;string&gt;中，是普通函数.</span></span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span><span class="params">(istream&amp; is,<span class="built_in">string</span>&amp; str)</span></span>;</span><br><span class="line"><span class="comment">//从输入流is中(如 cin),读一行到str里面.</span></span><br><span class="line"><span class="function">istream&amp; <span class="title">getline</span><span class="params">(istream&amp; is,<span class="built_in">string</span>&amp; str,<span class="keyword">char</span> delim)</span></span>;</span><br><span class="line"><span class="comment">//从输入流is中,按照截断字符delim读到str中</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<hr>
<h2 id="关于—流和EOF-win下是ctrl-Z"><a href="#关于—流和EOF-win下是ctrl-Z" class="headerlink" title="关于—流和EOF(win下是ctrl+Z)"></a>关于—流和EOF(win下是ctrl+Z)</h2><blockquote>
<p>就while(getline(cin,line))分析一下</p>
<p>这个while语句真实的判断对象是 cin 的状态,也就是当前是否存在有效的输入流.而输入流是对象,返回的是输入流的状态.正常情况下,你是怎么输入都跳不出循环的. (如果认为输入 回车 就可以跳出,则是将 while的判断对象看成了 line(即判断line是否为空) 实际上,回车和设置的delim都是仅终止getline()的读取操作).</p>
<p>EOF是C语言中为了区分有效数据和输入结束符的。windows下是ctrl+z,linux/unix下是ctrl+d。</p>
</blockquote>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>字符串处理</tag>
      </tags>
  </entry>
</search>
