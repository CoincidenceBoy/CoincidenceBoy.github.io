<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CoincidenceBoy</title>
  
  <subtitle>blog</subtitle>
  <link href="https://coincidenceboy.github.io/atom.xml" rel="self"/>
  
  <link href="https://coincidenceboy.github.io/"/>
  <updated>2021-05-09T02:15:53.499Z</updated>
  <id>https://coincidenceboy.github.io/</id>
  
  <author>
    <name>CoincidenceBoy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>first-django-pj</title>
    <link href="https://coincidenceboy.github.io/2021/05/08/first-django-pj/"/>
    <id>https://coincidenceboy.github.io/2021/05/08/first-django-pj/</id>
    <published>2021-05-08T11:40:35.000Z</published>
    <updated>2021-05-09T02:15:53.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p><img src="/2021/05/08/first-django-pj/1-1.png" alt="image-20210508194921248"></p><p><img src="/2021/05/08/first-django-pj/1-2.png" alt="image-20210508195430245"></p><p><img src="/2021/05/08/first-django-pj/1-3.png" alt="image-20210508195616051"></p><h2 id="创建poll应用"><a href="#创建poll应用" class="headerlink" title="创建poll应用"></a>创建poll应用</h2><blockquote><p>django中,每个应用都是一个python包,并且遵循相同的约定.  </p><p>并且可以在创建应用的时候生成基础的目录结构.</p></blockquote><p><img src="/2021/05/08/first-django-pj/1-4.png" alt="image-20210508195927003"></p><p><img src="/2021/05/08/first-django-pj/1-5.png" alt="image-20210508200022857"></p><p><img src="/2021/05/08/first-django-pj/1-6.png" alt="image-20210508200119654"></p><h1 id="编写第一个视图"><a href="#编写第一个视图" class="headerlink" title="编写第一个视图"></a>编写第一个视图</h1><p><img src="/2021/05/08/first-django-pj/2-1.png" alt="image-20210508200232486"></p><blockquote><p>如果想看到效果的话 , 需要一个<strong>URL</strong>映射到它 ——–  所以我们需要一个URLconf</p></blockquote><ol><li><p>在 <strong><em>polls/</em></strong> 新建一个 <strong><em>urls.py</em></strong></p></li><li><p>输入如下代码<img src="/2021/05/08/first-django-pj/2-2.png" alt="image-20210508200809551"></p></li><li><p>在根URLconf( <strong><em>mysite/urls.py</em></strong> )中指定我们的polls.urls模块.<img src="/2021/05/08/first-django-pj/2-3.png" alt="image-20210508201222004"></p><p><img src="/2021/05/08/first-django-pj/2-5.png" alt="image-20210508201816134"></p><img src="/2021/05/08/first-django-pj/2-6.png" alt="image-20210508201844470" style="zoom:50%;"><p><img src="/2021/05/08/first-django-pj/2-7.png" alt="image-20210508202155269"></p></li></ol><blockquote><p>函数 <strong>include()</strong> 允许引入其他URLconfs.</p><p>每当django遇到 <strong>include()</strong> 时, 会截断与此项匹配的URL部分, 并将剩余的字符串发送到URLconf(此处指的是 <strong><em>mysite/urls.py</em></strong> )以供处理.</p></blockquote><p><img src="/2021/05/08/first-django-pj/2-4.png" alt="image-20210508201552521"></p><h1 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h1><h2 id="修改语言和时区"><a href="#修改语言和时区" class="headerlink" title="修改语言和时区"></a>修改语言和时区</h2><p><img src="/2021/05/08/first-django-pj/2-8.png" alt="image-20210508202358422"></p><h2 id="INSTALLED-APPS"><a href="#INSTALLED-APPS" class="headerlink" title="INSTALLED_APPS"></a>INSTALLED_APPS</h2><p><img src="/2021/05/08/first-django-pj/2-9.png" alt="image-20210508202814084"></p><blockquote><p>默认开启的某些应用(例如admin) 需要至少一个数据表(存储admin账户密码等) , 所以要在数据库中创建一些表</p></blockquote><h2 id="migrate命令-创建表"><a href="#migrate命令-创建表" class="headerlink" title="migrate命令 创建表"></a>migrate命令 创建表</h2><p><img src="/2021/05/08/first-django-pj/2-10.png" alt="image-20210508203005384"></p><p><img src="/2021/05/08/first-django-pj/2-11.png" alt="image-20210508203507432"></p><img src="/2021/05/08/first-django-pj/2-12.png" alt="image-20210508203604286" style="zoom:80%;"><h2 id="创建模型-数据库中的table"><a href="#创建模型-数据库中的table" class="headerlink" title="创建模型(数据库中的table)"></a>创建模型(数据库中的table)</h2><blockquote><p>首先分析 : 我们需要两个表 一个 <strong>Quesion</strong>( 问题描述和发布时间 ) , 一个<strong>Choice</strong>( 有两个字段，选项描述和当前得票数。每个选项属于一个问题[这里用外键来实现] )</p></blockquote><p><img src="/2021/05/08/first-django-pj/2-13.png" alt="image-20210508203850346"></p><h2 id="激活模型-由python类—-gt-应用数据库"><a href="#激活模型-由python类—-gt-应用数据库" class="headerlink" title="激活模型(由python类—&gt;应用数据库)"></a>激活模型(由python类—&gt;应用数据库)</h2><p><img src="/2021/05/08/first-django-pj/2-14.png" alt="image-20210508204349278"></p><p><img src="/2021/05/08/first-django-pj/2-15.png" alt="image-20210508204425109"></p><p><img src="/2021/05/08/first-django-pj/2-16.png" alt="image-20210508204800531"></p><p><img src="/2021/05/08/first-django-pj/2-17.png" alt="image-20210508204857087"></p><img src="/2021/05/08/first-django-pj/2-19.png" alt="image-20210508205233465" style="zoom:67%;"><h3 id="总结—数据库修改"><a href="#总结—数据库修改" class="headerlink" title="总结—数据库修改"></a>总结—数据库修改</h3><p><img src="/2021/05/08/first-django-pj/2-18.png" alt="image-20210508205002664"></p><h1 id="django的管理界面"><a href="#django的管理界面" class="headerlink" title="django的管理界面"></a>django的管理界面</h1><h2 id="创建一个管理员账户"><a href="#创建一个管理员账户" class="headerlink" title="创建一个管理员账户"></a>创建一个管理员账户</h2><p><img src="/2021/05/08/first-django-pj/3-1.png" alt="image-20210509080346195"></p><h2 id="启动开发服务器"><a href="#启动开发服务器" class="headerlink" title="启动开发服务器"></a>启动开发服务器</h2><p><img src="/2021/05/08/first-django-pj/3-2.png" alt="image-20210509080539096"></p><p><img src="/2021/05/08/first-django-pj/3-3.png" alt="image-20210509080505588"></p><h2 id="管理站点页面"><a href="#管理站点页面" class="headerlink" title="管理站点页面"></a>管理站点页面</h2><p><img src="/2021/05/08/first-django-pj/3-4.png" alt="image-20210509080728696"></p><blockquote><p> 关于用户权限</p></blockquote><p><img src="/2021/05/08/first-django-pj/3-5.png" alt="image-20210509080855415"></p><p><img src="/2021/05/08/first-django-pj/3-6.png" alt="image-20210509080922400"></p><h2 id="向管理页面中加入polls应用"><a href="#向管理页面中加入polls应用" class="headerlink" title="向管理页面中加入polls应用"></a>向管理页面中加入polls应用</h2><p><img src="/2021/05/08/first-django-pj/3-7.png" alt="image-20210509081020075"></p><p><img src="/2021/05/08/first-django-pj/3-9.png" alt="image-20210509082054055"></p><p><img src="/2021/05/08/first-django-pj/3-8.png" alt="image-20210509081343426"></p><h1 id="Django视图"><a href="#Django视图" class="headerlink" title="Django视图"></a>Django视图</h1><h2 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h2><blockquote><p>Django视图的概念是 [一类具有相同功能和模板的<strong>网页的集合</strong>]</p><p>在Django中, 网页和其他内容都是从视图派生而来的.</p><p>每个视图表现为一个Python函数, Django 将会根据用户请求的 URL 来选择使用哪个视图（更准确的说，是根据 URL 中域名之后的部分）</p></blockquote><p><img src="/2021/05/08/first-django-pj/4-1.png" alt="image-20210509082259498"></p><p><img src="/2021/05/08/first-django-pj/4-2.png" alt="image-20210509082517297"></p><h2 id="编写更多视图"><a href="#编写更多视图" class="headerlink" title="编写更多视图"></a>编写更多视图</h2><h2 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h2><p><img src="/2021/05/08/first-django-pj/4-3.png" alt="image-20210509082831410"></p><p><img src="/2021/05/08/first-django-pj/4-4.png" alt="image-20210509082901320"></p><p><img src="/2021/05/08/first-django-pj/4-5.png" alt="image-20210509083015415"></p><blockquote><p>思考为什么会完成跳转?</p></blockquote><ol><li>当某人请求您网页的某一页面时, 比如说”/polls/34/“ ,Django会载入mysite.urls 模块, 因为这在配置项 <code>ROOT_URLCONF</code>中设置了。</li></ol><p><img src="/2021/05/08/first-django-pj/4-6.png" alt="image-20210509083410300"></p><p><img src="/2021/05/08/first-django-pj/4-7.png" alt="image-20210509083553196"></p><ol start="2"><li><p>然后 Django 寻找名为<code>urlpatterns</code>变量并且按序匹配正则表达式. </p></li><li><p>在找到匹配项 <code>polls/</code>，它切掉了匹配的文本（<code>polls/</code>），将剩余文本——<code>34/</code>，发送至 <strong><em>‘polls.urls’</em></strong> 做进一步处理。</p></li></ol><p><img src="/2021/05/08/first-django-pj/4-8.png" alt="image-20210509083813472"></p><ol start="4"><li>在这里剩余文本匹配了 <code>&#39;&lt;int:question_id&gt;/&#39;</code>，使得我们 Django 以如下形式调用 <code>detail()</code>:</li></ol><p><img src="/2021/05/08/first-django-pj/4-9.png" alt="image-20210509084033738"></p><p><strong>此时</strong> <img src="/2021/05/08/first-django-pj/4-10.png" alt="image-20210509084106416"></p><blockquote><p><code>question_id=34</code> 由 <code>&lt;int:question_id&gt;</code> 匹配生成。使用尖括号“捕获”这部分 URL，且以关键字参数的形式发送给视图函数。</p></blockquote><h2 id="index视图"><a href="#index视图" class="headerlink" title="index视图"></a>index视图</h2><p><img src="/2021/05/08/first-django-pj/4-11.png" alt="4-11"></p><p><img src="/2021/05/08/first-django-pj/4-12.png" alt="image-20210509090013339"></p><blockquote><p>这里有个严重的问题是 , 页面的设计是写死在 视图函数index()里面的. [应该是由前端html等完成的].</p><blockquote><p>这里我们使用 Django 的模板系统，只要创建一个视图，就可以将页面的设计从代码中分离出来。</p></blockquote></blockquote><ol><li>在你的 <code>polls</code> 目录里创建一个 <code>templates</code> 目录。Django 将会在这个目录里查找模板文件</li></ol><blockquote><p>你项目的 <code>TEMPLATES</code> 配置项描述了 Django 如何载入和渲染模板。默认的设置文件设置了 <code>DjangoTemplates</code> 后端，并将 <code>APP_DIRS</code>设置成了 <code>True</code>。</p><p><img src="/2021/05/08/first-django-pj/4-13.png" alt="image-20210509090527159"></p></blockquote><ol start="2"><li><p><img src="/2021/05/08/first-django-pj/4-14.png" alt="image-20210509090830771"></p></li></ol><p><img src="/2021/05/08/first-django-pj/4-15.png" alt="image-20210509090926608"></p><ol start="3"><li><p><img src="/2021/05/08/first-django-pj/4-16.png" alt="image-20210509091112818"></p></li><li><p>更新<code>polls/views.py</code> 里的 <code>index</code> 视图来使用模板 : </p></li></ol><p><img src="/2021/05/08/first-django-pj/4-17.png" alt="image-20210509091329708"></p><p><img src="/2021/05/08/first-django-pj/4-18.png" alt="image-20210509092610067"></p><h2 id="polls详情视图"><a href="#polls详情视图" class="headerlink" title="polls详情视图"></a>polls详情视图</h2><p><img src="/2021/05/08/first-django-pj/4-19.png" alt="image-20210509092920383"></p><blockquote><p>这里有个新原则。如果指定问题 ID 所对应的问题不存在，这个视图就会抛出一个 <a href="https://docs.djangoproject.com/zh-hans/3.2/topics/http/views/#django.http.Http404"><code>Http404</code></a> 异常。</p></blockquote><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><img src="/2021/05/08/first-django-pj/4-20.png" alt="image-20210509093103836" style="zoom:50%;">                             <img src="/2021/05/08/first-django-pj/4-21.png" alt="image-20210509093141427" style="zoom:50%;">        </p><p><img src="/2021/05/08/first-django-pj/4-22.png" alt="image-20210509093621301"></p><h3 id="使用模板系统"><a href="#使用模板系统" class="headerlink" title="使用模板系统"></a>使用模板系统</h3><p><img src="/2021/05/08/first-django-pj/4-23.png" alt="image-20210509093812215"></p><p><img src="/2021/05/08/first-django-pj/4-24.png" alt="image-20210509093913519"></p><h3 id="去除模板中的硬编码URL"><a href="#去除模板中的硬编码URL" class="headerlink" title="去除模板中的硬编码URL"></a>去除模板中的硬编码URL</h3><p><img src="/2021/05/08/first-django-pj/4-25.png" alt="image-20210509094535923"></p><h4 id="更易修改-URL"><a href="#更易修改-URL" class="headerlink" title="更易修改 URL"></a>更易修改 URL</h4><p><img src="/2021/05/08/first-django-pj/4-26.png" alt="image-20210509094729480"></p><p><img src="/2021/05/08/first-django-pj/4-27.png" alt="image-20210509094909546"></p><img src="/2021/05/08/first-django-pj/4-28.png" alt="image-20210509094942847" style="zoom:50%;"><h3 id="为-URL-名称添加命名空间"><a href="#为-URL-名称添加命名空间" class="headerlink" title="为 URL 名称添加命名空间"></a>为 URL 名称添加命名空间</h3><p><img src="/2021/05/08/first-django-pj/4-29.png" alt="image-20210509095215902"></p><p><img src="/2021/05/08/first-django-pj/4-30.png" alt="image-20210509095405049"></p><h3 id="编写一个简单的表单-lt-form-gt"><a href="#编写一个简单的表单-lt-form-gt" class="headerlink" title="编写一个简单的表单 &lt; form &gt;"></a>编写一个简单的表单 &lt; form &gt;</h3><p><img src="/2021/05/08/first-django-pj/4-32.png" alt="image-20210509095906418"></p><p><img src="/2021/05/08/first-django-pj/4-31.png" alt="image-20210509095846137"></p><h2 id="polls投票视图"><a href="#polls投票视图" class="headerlink" title="polls投票视图"></a>polls投票视图</h2><blockquote><p>用于处理提交的数据</p></blockquote><p><img src="/2021/05/08/first-django-pj/4-33.png" alt="image-20210509101228282"></p><p><img src="/2021/05/08/first-django-pj/4-34.png" alt="image-20210509101318814"></p><p><img src="/2021/05/08/first-django-pj/4-35.png" alt="image-20210509101348249"></p><blockquote><p>跳转后显示界面<strong>polls/results.html</strong></p></blockquote><p><img src="/2021/05/08/first-django-pj/4-36.png" alt="image-20210509101442018"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建项目&quot;&gt;&lt;a href=&quot;#创建项目&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2021/05/08/first-django-pj/1-1.png&quot; alt=&quot;image-2021</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Student-system</title>
    <link href="https://coincidenceboy.github.io/2021/04/28/Student-system/"/>
    <id>https://coincidenceboy.github.io/2021/04/28/Student-system/</id>
    <published>2021-04-28T14:03:21.000Z</published>
    <updated>2021-04-28T14:09:37.661Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h3 id="Follow-our-github"><a href="#Follow-our-github" class="headerlink" title="Follow our github"></a><a href="https://github.com/CoincidenceBoy/Student-management-system">Follow our github</a></h3><h1 id="项目进度跟踪图"><a href="#项目进度跟踪图" class="headerlink" title="项目进度跟踪图"></a>项目进度跟踪图</h1><p><img src="/2021/04/28/Student-system/Student-Management-System.png" alt="Student-Management-System"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;Follow-our-github&quot;&gt;&lt;a h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>LeetCode-1-线性表</title>
    <link href="https://coincidenceboy.github.io/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <id>https://coincidenceboy.github.io/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/</id>
    <published>2021-04-06T13:09:41.000Z</published>
    <updated>2021-04-07T07:32:20.741Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h1><h2 id="Remove-Duplicates-from-Sorted-Array"><a href="#Remove-Duplicates-from-Sorted-Array" class="headerlink" title="Remove Duplicates from Sorted Array"></a><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/">Remove Duplicates from Sorted Array</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.1%E9%A2%98%E7%9B%AE.png" alt="image-20210406212137392"></p><h3 id="Code-reference"><a href="#Code-reference" class="headerlink" title="Code reference"></a>Code reference</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//code-1  与1.2对应</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.size()&lt;=<span class="number">1</span>)<span class="keyword">return</span> nums.size();</span><br><span class="line">        <span class="comment">//i为fast指针 , index为slow指针</span></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;nums.size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]!=nums[index<span class="number">-1</span>])&#123;</span><br><span class="line">                nums[index++]=nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//code-2</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> distance(nums.begin(),unique(nums.begin(),nums.end()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><ol><li><p><code>distance</code>(<code>iterator</code> begin,<code>iterator</code> end)   <code>return</code>两个迭代器[begin,end)内元素的个数.</p></li><li><p><code>unique</code>(<code>iterator</code> begin,<code>iterator</code> end)  对[begin,end)进行去重,<code>return</code>一个<code>iterator</code>-&gt;去重后不重复序列的最后一个元素的下一个元素位置。</p></li><li><p><code>unique</code>(<code>iterator</code> begin,<code>iterator</code> end,<code>bool</code> cmp)  cmp -&gt; 自定义元素是否相等</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>注</strong> : <code>unique</code>去重的本质同上述实现(不断的把后面不重复的元素移到前面来) , 即容器原长度不变,</p><p>可以与<code>erase</code>函数一起使用来实现真正意义的”删除”</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">erase(unique(nums.begin(),nums.end(),num.end());</span><br><span class="line"><span class="comment">//unique()返回的是 不重复序列的最后一个元素的下一个元素  erase[ ) 刚好可以删除多余的区间.</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="Remove-Duplicates-from-Sorted-Array-II"><a href="#Remove-Duplicates-from-Sorted-Array-II" class="headerlink" title="Remove Duplicates from Sorted Array II"></a><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/">Remove Duplicates from Sorted Array II</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.2%E9%A2%98%E7%9B%AE.png" alt="image-20210406215547105"></p><h3 id="code-reference"><a href="#code-reference" class="headerlink" title="code reference"></a>code reference</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以类比成 保留 k 位</span></span><br><span class="line"><span class="comment">//①由于是保留 k 个相同数字，对于前 k 个数字，我们可以直接保留</span></span><br><span class="line"><span class="comment">//②从第k+1位开始之后的每一位,能够保留的条件是 : 与当前写入的位置(slow)前面的第k位 compare , 不相同可以保留</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">removeDuplicates</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.size()&lt;=<span class="number">2</span>)<span class="keyword">return</span> nums.size();</span><br><span class="line">        <span class="comment">//i为fast指针 , index为slow指针</span></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;nums.size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]!=nums[index<span class="number">-2</span>])&#123;</span><br><span class="line">                nums[index++] = nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Search-in-Rotated-Sorted-Array"><a href="#Search-in-Rotated-Sorted-Array" class="headerlink" title="Search in Rotated Sorted Array"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">Search in Rotated Sorted Array</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.3%E9%A2%98%E7%9B%AE.png" alt="image-20210406223825287"></p><h3 id="relevant-binarySearch"><a href="#relevant-binarySearch" class="headerlink" title="relevant_binarySearch"></a>relevant_binarySearch</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//binarySearch --- 查找==target的索引,找不到`return` -1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> target,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="comment">//left=0,right=n-1</span></span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left + ((right-left)&gt;&gt;<span class="number">1</span>); <span class="comment">// (left+right)/2 可能会溢出</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(nums[mid]==target)&#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&lt;target)&#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>right=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//若return left; 表示如果将target按顺序插入时的索引.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//lowerBound --- 查找 &gt;= target的the first position,找不到返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">lowerBound</span><span class="params">(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> target,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left + ((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//if(nums[mid]==target)&#123;...&#125;当==时,不能确定mid是否为左边界,所以我们还需要在mid值的左侧</span></span><br><span class="line">        <span class="comment">//继续找寻target. 即 right=mid-1; 此时可以与if(num[mid]&gt;target)合并</span></span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&gt;=target)&#123;</span><br><span class="line">            right=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span>left=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//upperBound --- 查找 &lt;= target的the last position,找不到返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">upperBound</span><span class="params">(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> target,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&lt;=target)&#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span>right=mid<span class="number">-1</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//find_first --- 查找 == target的下界,找不到返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find_first</span><span class="params">(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> target,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(nums[mid]==target)&#123;</span><br><span class="line">            right=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&gt;target)&#123;</span><br><span class="line">            right=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>left=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//find_last --- 查找 == target的上界,找不到返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find_last</span><span class="params">(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> target,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid=left+((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(nums[mid]==target)&#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&lt;target)&#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>right=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="analysis"><a href="#analysis" class="headerlink" title="analysis"></a>analysis</h3><blockquote><p><strong>数组依mid位置分开时,一定有一个数组是有序的</strong>. 我们可以通过<code>mid</code>来判断[<code>l</code>,<code>mid</code>]和[<code>mid</code>,<code>r</code>]哪部分是有序的 , 进而再根据有序的那一部分 判断 <code>target</code>在不在这个部分.</p><p><code>mid</code>的位置有三种</p><p>①刚好nums[<code>mid</code>]==<code>target</code> , return <code>mid</code>即可.</p><p>②和<code>left</code>在同一个数组内  (同时在数组1 或者 2)  此时 nums[<code>mid</code>]&gt;=nums[<code>left</code>] </p><p>③和<code>left</code>不在同一个数组内 (<code>left</code>在数组1 <code>mid</code>在数组2)  此时 nums[<code>mid</code>]&lt;nums[<code>left</code>] </p><p>考虑情况①,target的情况 : (如果nums[<code>mid</code>]==<code>target</code>,已经return了.)</p><ol><li>落在<code>mid</code>左边,此时<code>left</code> &lt;=<code>target</code> &lt;<code>mid</code>都在数组1中,只需 <code>right</code> = <code>mid</code>-<code>1</code>;</li><li>落在<code>mid</code>右边,此时会出现两种情况, (落在1中)<code>target</code> &gt; nums[<code>mid</code>] || (落在2中)<code>target</code> &lt; nums[<code>left</code>],此时我们让<code>left</code>=<code>mid</code>+<code>1</code>,可以慢慢地将<code>left</code>和<code>right</code>赶到所在的有序数组里面.</li></ol><p>考虑情况②,target的情况 :</p><ol><li>落在<code>mid</code>右边,此时<code>mid</code> &lt;<code>target</code> &lt;=<code>right</code>都在数组2,只需 <code>left</code> = <code>mid</code>+<code>1</code>;</li><li>落在<code>mid</code>左边,此时会出现两种情况,(落在2中)<code>target</code> &lt; nums[<code>mid</code>] || (落在1中) <code>target</code> &gt; nums[<code>right</code>],此时我们让<code>right</code>=<code>mid</code>-<code>1</code>,可以慢慢地将<code>left</code>和<code>right</code>赶到所在的有序数组里面.</li></ol></blockquote><h3 id="code-reference-1"><a href="#code-reference-1" class="headerlink" title="code reference"></a>code reference</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums,<span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>,right=nums.size()<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left+((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (nums[mid] == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//mid与left落在同一个数组里.</span></span><br><span class="line">        <span class="keyword">if</span>(nums[mid] &gt;= nums[left])&#123;</span><br><span class="line">            <span class="comment">//target在left和mid 之间,则移动right,使其在一个数组内(数组1/2均是有序的)查找</span></span><br><span class="line">            <span class="keyword">if</span> (nums[left] &lt;= target &amp;&amp; target &lt; nums[mid])&#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//target在mid和right 之间，有可能在数组1,也有可能在数组2</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; nums[mid] || target &lt; nums[left]) &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; nums[left]) &#123;</span><br><span class="line">            <span class="comment">//有序的一段区间，target 在 mid 和 right 之间</span></span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; target &lt;= nums[right]) &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 两种情况，target 在left 和 mid 之间</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; nums[mid] || target &gt; nums[right]) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 核心思想==&gt;数组依据mid位置分开时,一定有一个是有序的, 我们可以通过mid位置(需要讨论位置)来判断</span></span><br><span class="line"><span class="comment">// [l,mid]和[mid,r]哪部分是有序的,再根据有序的那一部分 判断target在不在这个部分. </span></span><br><span class="line"><span class="comment">//如果target在有序区间的话,直接收缩left/right使之都处于有序区间.</span></span><br><span class="line"><span class="comment">//如果不在的话, 收缩left/right使之慢慢靠近有序区间.</span></span><br><span class="line"><span class="comment">// 理解清楚后 , 可以省略 else if</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>,right = nums.size()<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left+((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(nums[mid] == target)&#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid] &gt;= nums[left])&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[left] &lt;= target &amp;&amp; target &lt; nums[mid])&#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &lt; target &amp;&amp; target &lt;= nums[right])&#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Search-in-Rotated-Sorted-Array-II"><a href="#Search-in-Rotated-Sorted-Array-II" class="headerlink" title="Search in Rotated Sorted Array II"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/">Search in Rotated Sorted Array II</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.4%E9%A2%98%E7%9B%AE.png" alt="image-20210407111108134"></p><h3 id="analysis-1"><a href="#analysis-1" class="headerlink" title="analysis"></a>analysis</h3><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.4-analysis.png" alt="image-20210407111818115"></p><h3 id="code-reference-2"><a href="#code-reference-2" class="headerlink" title="code reference"></a>code reference</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//去重之后 保证 前段所有元素 都大于 后段所有元素 即可</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">search</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.size()<span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left +((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(nums[mid] == target)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid] == nums[left])&#123;</span><br><span class="line">            left++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &gt; nums[left])&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[left] &lt;= target &amp;&amp; target &lt; nums[mid])&#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> left = mid + <span class="number">1</span>; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &lt; target &amp;&amp; target &lt;= nums[right])&#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> right = mid - <span class="number">1</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Find-Minimum-in-Rotated-Sorted-Array"><a href="#Find-Minimum-in-Rotated-Sorted-Array" class="headerlink" title="Find Minimum in Rotated Sorted Array"></a><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/">Find Minimum in Rotated Sorted Array</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.5%E9%A2%98%E7%9B%AE.png" alt="image-20210407113120177"></p><h3 id="analysis-2"><a href="#analysis-2" class="headerlink" title="analysis"></a>analysis</h3><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.5-analysis.png" alt="image-20210407114549651"></p><h3 id="code-reference-3"><a href="#code-reference-3" class="headerlink" title="code reference"></a>code reference</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>,right=nums.size()<span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="comment">//单调递增时直接返回</span></span><br><span class="line">        <span class="keyword">if</span>(nums[left] &lt;= nums[right])&#123;</span><br><span class="line">            <span class="keyword">return</span> nums[left]; <span class="comment">// return left</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = left + ((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//left mid之间单调递增,说明min必不在这个区间</span></span><br><span class="line">        <span class="keyword">if</span>(nums[left] &lt;= nums[mid])&#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//必存在min,注意 right = mid (因为此时mid可能就是最小值)</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[left] &gt; nums[mid])&#123;</span><br><span class="line">            right = mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// simplification</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findMin</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left=<span class="number">0</span>,right=nums.size()<span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[left] &lt;= nums[right])&#123;</span><br><span class="line">            <span class="keyword">return</span> nums[left];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = left + ((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(nums[mid]&gt;=nums[left])&#123;</span><br><span class="line">            left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>right=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Search-a-2D-Matrix"><a href="#Search-a-2D-Matrix" class="headerlink" title="Search a 2D Matrix"></a><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/">Search a 2D Matrix</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.6%E9%A2%98%E7%9B%AE.png" alt="image-20210407115832480"></p><h3 id="code-reference-4"><a href="#code-reference-4" class="headerlink" title="code reference"></a>code reference</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//看成1维数组即可 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">searchMatrix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cow = matrix.size(),col = matrix[<span class="number">0</span>].size();</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>,right = cow*col<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left + ((right-left)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> mid_cow = mid/col,mid_col = mid%col;</span><br><span class="line">        <span class="keyword">if</span>(matrix[mid_cow][mid_col] == target)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(matrix[mid_cow][mid_col] &gt; target)&#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> left = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Median-of-Two-Sorted-Arrays"><a href="#Median-of-Two-Sorted-Arrays" class="headerlink" title="Median of Two Sorted Arrays"></a><a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">Median of Two Sorted Arrays</a></h2><p><img src="/2021/04/06/LeetCode-1-%E7%BA%BF%E6%80%A7%E8%A1%A8/1.7.png" alt="image-20210407143717936"></p><h3 id="analysis-3"><a href="#analysis-3" class="headerlink" title="analysis"></a>analysis</h3><h3 id="code-reference-5"><a href="#code-reference-5" class="headerlink" title="code reference"></a>code reference</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;Array&quot;&gt;&lt;a href=&quot;#Array&quot;</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://coincidenceboy.github.io/categories/LeetCode/"/>
    
    
    <category term="线性表" scheme="https://coincidenceboy.github.io/tags/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>java04简易计算器</title>
    <link href="https://coincidenceboy.github.io/2021/02/06/java04%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>https://coincidenceboy.github.io/2021/02/06/java04%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/</id>
    <published>2021-02-06T04:19:22.000Z</published>
    <updated>2021-02-06T04:33:53.310Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现"></a>基本实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jay.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test04SimpleCalculator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Calculator calculator = <span class="keyword">new</span> Calculator();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> <span class="keyword">extends</span> <span class="title">Frame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Calculator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//3个文本框</span></span><br><span class="line">        TextField num1 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        TextField num2 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        TextField num3 = <span class="keyword">new</span> TextField(<span class="number">20</span>);<span class="comment">//字符数</span></span><br><span class="line">        <span class="comment">//1个按钮</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> MyCalculatorListener(num1,num2,num3));</span><br><span class="line">        <span class="comment">//1个便签</span></span><br><span class="line">        Label label = <span class="keyword">new</span> Label(<span class="string">&quot;+&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//布局</span></span><br><span class="line">        setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        add(num1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(num2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(num3);</span><br><span class="line"></span><br><span class="line">        pack();</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//监听器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCalculatorListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取三个变量</span></span><br><span class="line">    <span class="keyword">private</span> TextField num1,num2,num3;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyCalculatorListener</span><span class="params">(TextField num1,TextField num2,TextField num3)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num1=num1;</span><br><span class="line">        <span class="keyword">this</span>.num2=num2;</span><br><span class="line">        <span class="keyword">this</span>.num3=num3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.获得 两个加数</span></span><br><span class="line">        <span class="comment">//Integer.parseInt(string s) ==&gt; return parseInt(s,10); 10表10进制(radix)</span></span><br><span class="line">        <span class="keyword">int</span> n1 = Integer.parseInt(num1.getText());</span><br><span class="line">        <span class="keyword">int</span> n2 = Integer.parseInt(num2.getText());</span><br><span class="line">        <span class="comment">//2.将这个值放到第三个框</span></span><br><span class="line">        num3.setText(<span class="string">&quot;&quot;</span>+(n1+n2));</span><br><span class="line">        <span class="comment">//3.清除前两个框</span></span><br><span class="line">        num1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        num2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>缺点:</p><ul><li>代码像面向过程,显得繁琐</li></ul></blockquote><h1 id="代码改写-面向对象"><a href="#代码改写-面向对象" class="headerlink" title="代码改写-面向对象"></a>代码改写-面向对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jay.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="comment">//完全改造为 面向对象 代码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test05Calculator_plus</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Calculator_plus().loadFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator_plus</span> <span class="keyword">extends</span> <span class="title">Frame</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    TextField num1,num2,num3;</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//3个文本框</span></span><br><span class="line">        num1 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        num2 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        num3 = <span class="keyword">new</span> TextField(<span class="number">20</span>);<span class="comment">//字符数</span></span><br><span class="line">        <span class="comment">//1个按钮</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> MyCalculatorListener(<span class="keyword">this</span>));</span><br><span class="line">        <span class="comment">//1个便签</span></span><br><span class="line">        Label label = <span class="keyword">new</span> Label(<span class="string">&quot;+&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//布局</span></span><br><span class="line">        setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        add(num1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(num2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(num3);</span><br><span class="line"></span><br><span class="line">        pack();</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//监听器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCalculatorListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获得计算器这个对象,在一个类中组合另外一个类</span></span><br><span class="line">    Calculator_plus calculator = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyCalculatorListener</span><span class="params">(Calculator_plus calculator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.calculator = calculator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n1 = Integer.parseInt(calculator.num1.getText());</span><br><span class="line">        <span class="keyword">int</span> n2 = Integer.parseInt(calculator.num2.getText());</span><br><span class="line">        calculator.num3.setText(<span class="string">&quot;&quot;</span>+(n1+n2));</span><br><span class="line">        calculator.num1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        calculator.num2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>传值 改成 传class</strong></p></blockquote><h1 id="使用内部类进一步封装"><a href="#使用内部类进一步封装" class="headerlink" title="使用内部类进一步封装"></a>使用内部类进一步封装</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jay.lesson2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="comment">//完全改造为 面向对象 代码</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test05Calculator_plus</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Calculator_plus().loadFrame();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算器类  内部类写法</span></span><br><span class="line"><span class="comment">//内部类最大的好处就是畅通无阻的访问外部的属性和方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator_plus</span> <span class="keyword">extends</span> <span class="title">Frame</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    TextField num1,num2,num3;</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//3个文本框</span></span><br><span class="line">        num1 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        num2 = <span class="keyword">new</span> TextField(<span class="number">10</span>);<span class="comment">//字符数</span></span><br><span class="line">        num3 = <span class="keyword">new</span> TextField(<span class="number">20</span>);<span class="comment">//字符数</span></span><br><span class="line">        <span class="comment">//1个按钮</span></span><br><span class="line">        Button button = <span class="keyword">new</span> Button(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> MyCalculatorListener());</span><br><span class="line">        <span class="comment">//1个便签</span></span><br><span class="line">        Label label = <span class="keyword">new</span> Label(<span class="string">&quot;+&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//布局</span></span><br><span class="line">        setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">        add(num1);</span><br><span class="line">        add(label);</span><br><span class="line">        add(num2);</span><br><span class="line">        add(button);</span><br><span class="line">        add(num3);</span><br><span class="line"></span><br><span class="line">        pack();</span><br><span class="line">        setVisible(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//监听器类</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyCalculatorListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> n1 = Integer.parseInt(num1.getText());</span><br><span class="line">            <span class="keyword">int</span> n2 = Integer.parseInt(num2.getText());</span><br><span class="line">            num3.setText(<span class="string">&quot;&quot;</span>+(n1+n2));</span><br><span class="line">            num1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            num2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;基本实现&quot;&gt;&lt;a href=&quot;#基本实现&quot; c</summary>
      
    
    
    
    <category term="java" scheme="https://coincidenceboy.github.io/categories/java/"/>
    
    
    <category term="GUI" scheme="https://coincidenceboy.github.io/tags/GUI/"/>
    
  </entry>
  
  <entry>
    <title>java基础03</title>
    <link href="https://coincidenceboy.github.io/2021/02/03/java%E5%9F%BA%E7%A1%8003/"/>
    <id>https://coincidenceboy.github.io/2021/02/03/java%E5%9F%BA%E7%A1%8003/</id>
    <published>2021-02-03T03:25:26.000Z</published>
    <updated>2021-02-03T11:52:48.836Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="面向对象编程-OOP"><a href="#面向对象编程-OOP" class="headerlink" title="面向对象编程(OOP)"></a>面向对象编程(OOP)</h1><blockquote><p>面向对象编程( Object-Oriented Programming , OOP )</p><ul><li>本质 : <strong>以类(class)的方式组织代码, 以对象的形式封装数据 .</strong></li></ul></blockquote><h2 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h2><ul><li><strong>封装</strong></li><li><strong>继承</strong></li><li><strong>多态</strong></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;面向对象编程-OOP&quot;&gt;&lt;a href=&quot;#面</summary>
      
    
    
    
    <category term="java" scheme="https://coincidenceboy.github.io/categories/java/"/>
    
    
    <category term="java基础" scheme="https://coincidenceboy.github.io/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>java基础02</title>
    <link href="https://coincidenceboy.github.io/2021/02/02/java%E5%9F%BA%E7%A1%8002/"/>
    <id>https://coincidenceboy.github.io/2021/02/02/java%E5%9F%BA%E7%A1%8002/</id>
    <published>2021-02-02T00:38:20.000Z</published>
    <updated>2021-02-03T14:33:49.686Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p><img src="/2021/02/02/java%E5%9F%BA%E7%A1%8002/2.png" alt="image-20210202091737459"></p><h1 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h1><p><img src="/2021/02/02/java%E5%9F%BA%E7%A1%8002/3.png" alt="image-20210202102825432"></p><h1 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h1><p><img src="/2021/02/02/java%E5%9F%BA%E7%A1%8002/4.png" alt="image-20210203085950196"></p><img src="/2021/02/02/java%E5%9F%BA%E7%A1%8002/5.png" alt="image-20210203090738883" style="zoom:80%;"><blockquote><p><strong>数组</strong> 属于引用类型,数组也可以看成对象,数组中每个元素相当于该对象的成员变量.</p><p>数组对象本身是在堆中 . </p></blockquote><h2 id="java传递参数"><a href="#java传递参数" class="headerlink" title="java传递参数"></a>java传递参数</h2><p><img src="/2021/02/02/java%E5%9F%BA%E7%A1%8002/6.png" alt="image-20210203120026000"></p><blockquote><p>结合上述内存分析 , 传参用到的是 <strong>栈</strong> 来实现的. (栈里保存了基本变量具体数值 和 引用变量的地址.)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; c</summary>
      
    
    
    
    <category term="java" scheme="https://coincidenceboy.github.io/categories/java/"/>
    
    
    <category term="java基础" scheme="https://coincidenceboy.github.io/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>java基础01</title>
    <link href="https://coincidenceboy.github.io/2021/02/01/java%E5%9F%BA%E7%A1%8001/"/>
    <id>https://coincidenceboy.github.io/2021/02/01/java%E5%9F%BA%E7%A1%8001/</id>
    <published>2021-02-01T13:12:44.000Z</published>
    <updated>2021-02-02T00:39:40.706Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="Java课程概括"><a href="#Java课程概括" class="headerlink" title="Java课程概括"></a>Java课程概括</h1><p><img src="/2021/02/01/java%E5%9F%BA%E7%A1%8001/4.png" alt="Java课程概括"></p><h1 id="初识Java"><a href="#初识Java" class="headerlink" title="初识Java"></a>初识Java</h1><h2 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK,JRE,JVM ?"></a>JDK,JRE,JVM ?</h2><p><img src="/2021/02/01/java%E5%9F%BA%E7%A1%8001/2.png" alt="image-20210201211350033"></p><h2 id="Java程序运行机制"><a href="#Java程序运行机制" class="headerlink" title="Java程序运行机制"></a>Java程序运行机制</h2><p><img src="/2021/02/01/java%E5%9F%BA%E7%A1%8001/3.png" alt="image-20210202075626846"></p><blockquote><p>右侧部分为 jvm 执行内容</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;Java课程概括&quot;&gt;&lt;a href=&quot;#Jav</summary>
      
    
    
    
    <category term="java" scheme="https://coincidenceboy.github.io/categories/java/"/>
    
    
    <category term="java基础" scheme="https://coincidenceboy.github.io/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>常用Dos命令</title>
    <link href="https://coincidenceboy.github.io/2021/02/01/%E5%B8%B8%E7%94%A8Dos%E5%91%BD%E4%BB%A4/"/>
    <id>https://coincidenceboy.github.io/2021/02/01/%E5%B8%B8%E7%94%A8Dos%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-01T11:43:29.000Z</published>
    <updated>2021-02-01T12:28:07.884Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="打开cmd的方式"><a href="#打开cmd的方式" class="headerlink" title="打开cmd的方式"></a>打开cmd的方式</h1><ol><li>Win / 所有应用 / W / Windows 系统 / 命令提示符 (右键—&gt;以管理员方式运行)</li><li>Win+R 输入cmd</li><li>任意目录下,按住shift + 鼠标右键 打开powershell</li><li>资源管理器地址栏前面加上 <strong>cmd空格</strong></li></ol><h1 id="常用Dos命令"><a href="#常用Dos命令" class="headerlink" title="常用Dos命令"></a>常用Dos命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始状态</span></span><br><span class="line">C:\Users\mi&gt;</span><br><span class="line">C:\WINDOWS\system32&gt;</span><br><span class="line"><span class="comment">#1.盘符切换</span></span><br><span class="line">C:\Users\mi&gt;D:</span><br><span class="line"><span class="comment">#2.查看当前目录下所有文件</span></span><br><span class="line">    dir</span><br><span class="line"><span class="comment">#3.切换目录</span></span><br><span class="line">D:\&gt;<span class="built_in">cd</span> /d C:\Users\mi\Desktop (跨盘需要加参数/d)</span><br><span class="line">    <span class="built_in">cd</span> .. 返回上一级</span><br><span class="line"><span class="comment">#4.清屏</span></span><br><span class="line">    cls (clear screen)</span><br><span class="line"><span class="comment">#5.退出终端</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="comment">#6.查看ip</span></span><br><span class="line">    ipconfig</span><br><span class="line"><span class="comment">#7.打开系统工具</span></span><br><span class="line">    calc (calculator)</span><br><span class="line">    mspaint</span><br><span class="line">    notepad (新建记事本)</span><br><span class="line"><span class="comment">#8.ping</span></span><br><span class="line">    ping www.bilibili.com</span><br><span class="line"><span class="comment">#9.新建文件夹</span></span><br><span class="line">C:\Users\mi\Desktop&gt;md test1</span><br><span class="line"><span class="comment">#10.新建文件</span></span><br><span class="line">C:\Users\mi\Desktop\test1&gt;<span class="built_in">cd</span>&gt;a.txt</span><br><span class="line"><span class="comment">#11.删除文件</span></span><br><span class="line">C:\Users\mi\Desktop\test1&gt;del a.txt</span><br><span class="line"><span class="comment">#12.删除目录(目录为空)</span></span><br><span class="line">C:\Users\mi\Desktop&gt;rd test1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;打开cmd的方式&quot;&gt;&lt;a href=&quot;#打开c</summary>
      
    
    
    
    <category term="win10" scheme="https://coincidenceboy.github.io/categories/win10/"/>
    
    
    <category term="Dos命令" scheme="https://coincidenceboy.github.io/tags/Dos%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>css浮动布局&amp;盒子模型</title>
    <link href="https://coincidenceboy.github.io/2021/02/01/css%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
    <id>https://coincidenceboy.github.io/2021/02/01/css%E6%B5%AE%E5%8A%A8%E5%B8%83%E5%B1%80-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</id>
    <published>2021-02-01T02:23:53.000Z</published>
    <updated>2021-02-01T03:03:13.463Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

</summary>
      
    
    
    
    <category term="前端" scheme="https://coincidenceboy.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="css" scheme="https://coincidenceboy.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css基础</title>
    <link href="https://coincidenceboy.github.io/2021/01/28/css%E5%9F%BA%E7%A1%80/"/>
    <id>https://coincidenceboy.github.io/2021/01/28/css%E5%9F%BA%E7%A1%80/</id>
    <published>2021-01-28T10:18:21.000Z</published>
    <updated>2021-02-01T02:10:47.247Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h1><blockquote><p>CSS(Cascading Style Sheets,即层叠样式表),用来为html / xml文档添加样式.</p><ul><li><strong>使用css使得结构(html)和表现(css)分离,方便维护.</strong></li></ul></blockquote><h1 id="css基本语法"><a href="#css基本语法" class="headerlink" title="css基本语法"></a>css基本语法</h1><blockquote><p>选择器(selector) + 属性(property) + 属性值(value);</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">selector&#123;</span><br><span class="line">    property: value;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="css的四种引用方式"><a href="#css的四种引用方式" class="headerlink" title="css的四种引用方式"></a>css的四种引用方式</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>4种css引入样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    /*<span class="comment">&lt;!--3.外部样式,先创建一个css文件,再用link标签引入--&gt;</span>*/</span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style1.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="xml">        /*<span class="comment">&lt;!--4.导入外部样式(先创建一个css文件,在&lt;style&gt;标签中用import导入这个样式)--&gt;</span>*/</span></span><br><span class="line"><span class="css">        <span class="keyword">@import</span> url(<span class="string">&quot;style2.css&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">        /*<span class="comment">&lt;!--2.内部样式表--&gt;</span>*/</span></span><br><span class="line">        p&#123;</span><br><span class="line">            background: aqua;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            font-style: italic;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1.行间样式 直接在标签内 style=&quot; ; &quot;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;background:darkred;font-size:30px&quot;</span>&gt;</span>测试行间样式<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>测试内部样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/01/28/css%E5%9F%BA%E7%A1%80/2.png" alt="image-20210129084707130"></p><h1 id="css-selector"><a href="#css-selector" class="headerlink" title="css-selector"></a>css-selector</h1><h2 id="通配符selector"><a href="#通配符selector" class="headerlink" title="通配符selector"></a>通配符selector</h2><blockquote><p>*<strong>{ color:red; }</strong></p></blockquote><h2 id="标签selector"><a href="#标签selector" class="headerlink" title="标签selector"></a>标签selector</h2><blockquote><p><strong>p{ color:red; }</strong></p><p><strong>span{ color:red; }</strong></p></blockquote><h2 id="类selector"><a href="#类selector" class="headerlink" title="类selector"></a>类selector</h2><blockquote><p><strong>.class{ color:red; }</strong></p></blockquote><h2 id="id-selector"><a href="#id-selector" class="headerlink" title="id selector"></a>id selector</h2><blockquote><p><strong>#id{ color:red; }</strong></p></blockquote><h2 id="派生selector"><a href="#派生selector" class="headerlink" title="派生selector"></a>派生selector</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 指定p标签下的所有span标签颜色为红色 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span> <span class="selector-tag">span</span> &#123; <span class="attribute">color</span>: red; &#125;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 指定p标签下的子元素span标签颜色为红色 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span>&gt;<span class="selector-tag">span</span> &#123; <span class="attribute">color</span>: red; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">li</span>+<span class="selector-tag">li</span> &#123; <span class="attribute">color</span>: red; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>不显示红字1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>显示红字2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>显示红字3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><h3 id="elector-attr"><a href="#elector-attr" class="headerlink" title="elector[attr]"></a>elector[attr]</h3><blockquote><p><strong>选择具有attr属性的元素。</strong></p></blockquote><h3 id="elector-attr-”val”"><a href="#elector-attr-”val”" class="headerlink" title="elector[attr=”val”]"></a>elector[attr=”val”]</h3><blockquote><p><strong>选择具有attr属性&amp;&amp;attr=”val”的元素。</strong></p></blockquote><h3 id="elector-attr-”val”-1"><a href="#elector-attr-”val”-1" class="headerlink" title="elector[attr~=”val”]"></a>elector[attr~=”val”]</h3><blockquote><p><strong>选择具有attr属性&amp;&amp;属性包含val的元素。</strong></p><p>包含 : 多个属性值 其中一个==”val”</p></blockquote><h3 id="elector-attr-”val”-2"><a href="#elector-attr-”val”-2" class="headerlink" title="elector[attr^=”val”]"></a>elector[attr^=”val”]</h3><blockquote><p><strong>选择具有attr属性&amp;&amp;属性以val开头的元素。</strong></p><p>开头 : 仅以其部分开头即可.</p></blockquote><h3 id="elector-attr-”val”-3"><a href="#elector-attr-”val”-3" class="headerlink" title="elector[attr$=”val”]"></a>elector[attr$=”val”]</h3><blockquote><p><strong>选择具有attr属性&amp;&amp;属性以val结尾的元素。</strong></p><p>结尾 : 同开头.</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--elector[attr]--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span><span class="selector-attr">[title]</span> &#123; <span class="attribute">color</span>: red; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">title</span>=<span class="string">&#x27;标题&#x27;</span>&gt;</span>div标签<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--elector[attr=val]--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123; <span class="attribute">background</span>: red; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--elector[attr~=val]--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">input</span><span class="selector-attr">[class~=<span class="string">&#x27;warning&#x27;</span>]</span> &#123; <span class="attribute">background</span>: red; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;text&#x27;</span> <span class="attr">class</span>=<span class="string">&#x27;input warning&#x27;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="selector分组"><a href="#selector分组" class="headerlink" title="selector分组"></a>selector分组</h2><blockquote><p>对selector进行分组, 同组的选择器可以共享相同的声明.(逗号隔开)</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123; <span class="attribute">font-size</span>: <span class="number">12px</span>; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="selector继承"><a href="#selector继承" class="headerlink" title="selector继承"></a>selector继承</h2><blockquote><p>指被包在内部的标签拥有外部标签的样式性质。</p><p>继承是一种机制，它允许样式不仅可以应用于某个特定的元素，还可以用于它的后代。</p></blockquote><h1 id="样式优先级"><a href="#样式优先级" class="headerlink" title="样式优先级"></a>样式优先级</h1><blockquote><p><strong>多重样式</strong>：如果外部样式、内部样式和内联样式同时应用于同一个元素，就是使多重样式的情况。</p><p>一般情况下，优先级如下：（外部样式）&lt;（内部样式）&lt;（内联样式）。</p></blockquote><p><img src="/2021/01/28/css%E5%9F%BA%E7%A1%80/3.png" alt="image-20210129090238317"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#content</span> <span class="selector-tag">div</span><span class="selector-class">.main_content</span> <span class="selector-tag">h2</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#content</span> <span class="selector-class">.main_content</span> <span class="selector-tag">h2</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">......</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个h2标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> 第一条样式的权重计算： 100+1+10+1，结果为112；</span></span><br><span class="line"><span class="comment"> 第二条样式的权重计算： 100+10+1，结果为111；</span></span><br><span class="line"><span class="comment"> h2标题的最终颜色为red</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h1 id="css字体样式"><a href="#css字体样式" class="headerlink" title="css字体样式"></a>css字体样式</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    p&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 28<span class="selector-tag">px</span>;<span class="comment">/* 80% */</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">font-family</span>: 汉仪乐喵体简,宋体,&quot;<span class="selector-tag">Courier</span> <span class="selector-tag">New</span>&quot;,微软雅黑;<span class="comment">/* 按优先级排列,字体名称有空格,要用&quot;&quot; */</span></span></span><br><span class="line"></span><br><span class="line">        font-style: normal;</span><br><span class="line"><span class="css">        <span class="selector-tag">font-style</span>: <span class="selector-tag">italic</span>; <span class="comment">/* 斜体,对于没有斜体变量的字体将应用oblique */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">font-style</span>: <span class="selector-tag">oblique</span>;<span class="comment">/* 斜体 */</span></span></span><br><span class="line"></span><br><span class="line">        font-weight: normal;</span><br><span class="line">        font-weight: bold;</span><br><span class="line">        font-weight: bolder;</span><br><span class="line">        font-weight: lighter;</span><br><span class="line"></span><br><span class="line">        color: red;</span><br><span class="line">        color: rgb(100,14,200);</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#123456</span>;</span></span><br><span class="line"></span><br><span class="line">        line-height: normal;</span><br><span class="line">        line-height: 20px;</span><br><span class="line"><span class="css">        <span class="selector-tag">line-height</span>: 1.5; <span class="comment">/*指定normal倍数*/</span></span></span><br><span class="line"></span><br><span class="line">        text-decoration: underline;</span><br><span class="line">        text-decoration: line-through;</span><br><span class="line">        text-decoration: overline;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">text-align</span>: <span class="selector-tag">left</span>; <span class="comment">/*默认*/</span></span></span><br><span class="line">        text-align: center;</span><br><span class="line">        text-align: right;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">text-transform</span>: <span class="selector-tag">capitalize</span>; <span class="comment">/*首字母大写*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">text-transform</span>: <span class="selector-tag">uppercase</span>;  <span class="comment">/*转大写*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">text-transform</span>: <span class="selector-tag">lowercase</span>;  <span class="comment">/*转小写*/</span></span></span><br><span class="line"></span><br><span class="line">        text-indent: 24px; </span><br><span class="line"><span class="css">        <span class="selector-tag">text-indent</span>: 2<span class="selector-tag">em</span>; <span class="comment">/*首行缩进2字符*/</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="css背景样式"><a href="#css背景样式" class="headerlink" title="css背景样式"></a>css背景样式</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-tag">transparent</span>;<span class="comment">/*默认背景色透明*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#123412</span>;</span></span><br><span class="line"><span class="css">        <span class="comment">/*关于image*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-image</span>: <span class="selector-tag">url</span>(&quot;./<span class="selector-tag">images</span>/<span class="selector-tag">pic</span><span class="selector-class">.png</span>&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">background-repeat</span>: <span class="selector-tag">repeat</span>;<span class="comment">/*默认横向&amp;纵向平铺*/</span></span></span><br><span class="line">        background-repeat: no-repeat;</span><br><span class="line">        background-repeat: repeat-x;</span><br><span class="line">        background-repeat: repeat-y;</span><br><span class="line"></span><br><span class="line">        background-position: 100px 100px;</span><br><span class="line">        background-position: center center;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">background-attachment</span>: <span class="selector-tag">scroll</span>;<span class="comment">/*默认,背景图片跟着页面滚动而滚动*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-attachment</span>: <span class="selector-tag">fixed</span>; <span class="comment">/*背景图片fix不动*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/*复合属性*/</span></span></span><br><span class="line"><span class="css">        <span class="comment">/*background: color image repeat attachment position*/</span></span></span><br><span class="line">        background: #fff url(&#x27;../images/pic.png&#x27;) no-repeat fixed center center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="css伪类selector"><a href="#css伪类selector" class="headerlink" title="css伪类selector"></a>css伪类selector</h1><h2 id="超链接-lt-a-gt-伪类"><a href="#超链接-lt-a-gt-伪类" class="headerlink" title="超链接&lt; a &gt;伪类"></a>超链接&lt; a &gt;伪类</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*按照顺序写 love hate*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="comment">/*未访问的链接样式*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="comment">/*已访问的链接样式*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:green</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="comment">/*鼠标悬停时的链接样式*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:yellow</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="comment">/*鼠标悬停且按下时的链接样式*/</span></span></span><br><span class="line">        color: blue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单-focus"><a href="#表单-focus" class="headerlink" title="表单 : focus"></a>表单 : focus</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*focus表单获得焦点时触发样式。*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span></span><br><span class="line">        background-color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="标签-nth-child"><a href="#标签-nth-child" class="headerlink" title="标签 : nth-child"></a>标签 : nth-child</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*空格是派生selector,选择所有后代*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#ff1299</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#38ff24</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#2c3cff</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="css伪元素selector"><a href="#css伪元素selector" class="headerlink" title="css伪元素selector"></a>css伪元素selector</h1><blockquote><p><strong>伪元素用于向某些选择器设置特殊效果.</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:before/:after/:first-letter/:first-line 1/2个冒号都可</span><br><span class="line">::selection/::placeholder/::backdrop     只能是2冒号</span><br></pre></td></tr></table></figure><h2 id="first-letter"><a href="#first-letter" class="headerlink" title=":first-letter"></a>:first-letter</h2><blockquote><p><strong>向文本的第一个字母添加特殊样式 .</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-pseudo">:first-letter</span> &#123; <span class="attribute">color</span>:red; <span class="attribute">font-size</span>:<span class="number">30px</span>; &#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> hello first-letter <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="first-line"><a href="#first-line" class="headerlink" title=":first-line"></a>:first-line</h2><blockquote><p><strong>向文本的首行添加特殊样式</strong></p></blockquote><h2 id="before"><a href="#before" class="headerlink" title=":before"></a>:before</h2><blockquote><p><strong>在元素之前添加内容</strong></p></blockquote><h2 id="after"><a href="#after" class="headerlink" title=":after"></a>:after</h2><blockquote><p><strong>在元素之后添加内容</strong></p></blockquote><hr><h1 id="关于dom树"><a href="#关于dom树" class="headerlink" title="关于dom树"></a>关于dom树</h1><blockquote><p><u><strong>CSS伪元素与伪类区别：</strong></u></p><ul><li><strong>css引入伪类和伪元素概念是为了格式化文档树以外的信息。也就是说，伪类和伪元素是用来修饰不在文档树中的部分。</strong></li><li><strong>伪类用于当已有元素处于的某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的。 它只有处于dom树无法描述的状态下才能为元素添加样式，所以将其称为伪类。</strong></li><li><strong>伪元素用于创建一些不在文档树中的元素,并为其添加样式。比如说，我们可以通过:before来在一个元素前增加一些文本, 并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中。</strong></li><li><strong>伪类允许出现在选择器的任何位置，而一个伪元素只能跟在选择器的最后一个简单选择器后面</strong></li></ul></blockquote><blockquote><p><strong>伪元素名和伪类名都是大小写不敏感的</strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;css简介&quot;&gt;&lt;a href=&quot;#css简介&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://coincidenceboy.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="css" scheme="https://coincidenceboy.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>html表格和表单</title>
    <link href="https://coincidenceboy.github.io/2021/01/28/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/"/>
    <id>https://coincidenceboy.github.io/2021/01/28/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/</id>
    <published>2021-01-28T09:10:46.000Z</published>
    <updated>2021-01-28T10:16:55.255Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="lt-table-gt-lt-table-gt"><a href="#lt-table-gt-lt-table-gt" class="headerlink" title="&lt; table &gt;&lt; /table &gt;"></a>&lt; table &gt;&lt; /table &gt;</h1><h2 id="table属性"><a href="#table属性" class="headerlink" title="table属性"></a>table属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">border:表格边框</span><br><span class="line">width :表格宽度</span><br><span class="line">align :表格对齐方式</span><br><span class="line">cellspacing(表格间距):单元格间隔</span><br><span class="line">cellpadding(表格填充):单元格边沿与内容之间的空白</span><br></pre></td></tr></table></figure><p><img src="/2021/01/28/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/2.png" alt="image-20210128173536185"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600px&quot;</span> <span class="attr">border</span>=<span class="string">&quot;10px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;4px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>学生信息表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--表头--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>住址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--表体--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--表脚--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>注:yds为优秀三好学生<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="lt-form-gt-lt-form-gt"><a href="#lt-form-gt-lt-form-gt" class="headerlink" title="&lt; form &gt;&lt; /form &gt;"></a>&lt; form &gt;&lt; /form &gt;</h1><blockquote><p>实现前后端交互的一个重要便签 ! </p></blockquote><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name:表单名称</span><br><span class="line">action:表单数据提交的地方(#表示提交到当前文件)</span><br><span class="line">method:前端提交数据到后端的方法,主要有get(默认)和post(提交数据不会暴露在地址栏中)</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span> <span class="attr">action</span>=<span class="string">&quot;1.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--表单元素有input,textarea,button,select--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单组件-表单元素"><a href="#表单组件-表单元素" class="headerlink" title="表单组件(表单元素)"></a>表单组件(表单元素)</h2><blockquote><p>input类,textarea类,select类,button类</p></blockquote><h3 id="input组件"><a href="#input组件" class="headerlink" title="input组件"></a>input组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">name主要是为了传送到后台后,进行区别</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span> <span class="attr">action</span>=<span class="string">&quot;1.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文本输入框:text--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;test&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入一个数字&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1024&quot;</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">    placeholder当未输入的时候的提示字符,如果给一个value初值则placeholder无效</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--密码输入:password--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入密码&quot;</span> <span class="attr">minlength</span>=<span class="string">&quot;8&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;16&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单选钮:radio--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">checked</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--复选框:checkbox--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>写代码</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>看电影</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>csgo</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>&gt;</span>听音乐</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文件上传:file  上传文件到后台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--普通按钮:button 通常用其去调用脚本代码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--图片按钮:image 与submit类似 只不是提示信息是图片 不是文字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;btn.png&quot;</span> <span class="attr">title</span>=<span class="string">&quot;刷新&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--提交按钮:submit 将表单数据提交到后台--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--重置按钮:reset--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/01/28/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/3.png" alt="image-20210128175619611"></p><h3 id="textarea组件"><a href="#textarea组件" class="headerlink" title="textarea组件"></a>textarea组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;1.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;test1&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;写下您的评论&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/01/28/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/4.png" alt="image-20210128180235918"></p><h3 id="select组件"><a href="#select组件" class="headerlink" title="select组件"></a>select组件</h3><blockquote><p>通常配合&lt; label &gt;&lt; /label &gt;使用</p><p>定义 <strong>单选|多选下拉菜单</strong>,包含若干个可选项(&lt; option &gt;&lt; /option &gt;)</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;1.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;course&quot;</span>&gt;</span>课程<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;course&quot;</span> <span class="attr">multiple</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chinese&quot;</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;math&quot;</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;computer&quot;</span>&gt;</span>计算机<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;else&quot;</span>&gt;</span>其他<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/01/28/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/5.png" alt="image-20210128180458779"></p><h3 id="button组件"><a href="#button组件" class="headerlink" title="button组件"></a>button组件</h3><blockquote><p>普通按钮 .  </p><ul><li>可以不写在form里面单独使用.</li><li>如果写在form里面,则用做提交功能. </li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;1.php&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span>   <span class="comment">&lt;!--这里的button组件功能 与 input组件type=&quot;submit&quot;功能相同--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;lt-table-gt-lt-table-gt</summary>
      
    
    
    
    <category term="前端" scheme="https://coincidenceboy.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="html" scheme="https://coincidenceboy.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>html标签属性</title>
    <link href="https://coincidenceboy.github.io/2021/01/28/html%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7/"/>
    <id>https://coincidenceboy.github.io/2021/01/28/html%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7/</id>
    <published>2021-01-28T09:09:49.000Z</published>
    <updated>2021-01-28T09:23:01.704Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="html属性"><a href="#html属性" class="headerlink" title="html属性"></a>html属性</h1><h2 id="通用属性"><a href="#通用属性" class="headerlink" title="通用属性"></a>通用属性</h2><blockquote><ol><li>id : 元素唯一的id</li><li>class : 元素的类名 可以有多个 例如 &lt; p class=”class1 class2”&gt;段落&lt; /p &gt;</li><li>style : 规定元素的行内样式</li><li>title : 鼠标停留在元素上时的提示文本 . </li></ol></blockquote><h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2><blockquote><p>常用于 <strong>图片懒加载</strong></p><p>html5 规定 自定义属性的格式为 data-* ,例如data-src</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--以下代码是实际开发的案例，img标签显示的是缩略图，而data-src的值为点击显示原图的地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;./img/1.jpg&#x27;</span> <span class="attr">data-src</span>=<span class="string">&#x27;./img/big_1.jpg&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="各便签的自有属性"><a href="#各便签的自有属性" class="headerlink" title="各便签的自有属性"></a>各便签的自有属性</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;html属性&quot;&gt;&lt;a href=&quot;#html属</summary>
      
    
    
    
    <category term="前端" scheme="https://coincidenceboy.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="html" scheme="https://coincidenceboy.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>html基本标签</title>
    <link href="https://coincidenceboy.github.io/2021/01/28/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/"/>
    <id>https://coincidenceboy.github.io/2021/01/28/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</id>
    <published>2021-01-28T06:30:33.000Z</published>
    <updated>2021-01-28T09:09:16.785Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="前端引入"><a href="#前端引入" class="headerlink" title="前端引入"></a>前端引入</h1><blockquote><p>​                <strong><em>前端开发又称 web前端开发,指的是基于web的网页界面美化及功能开发.</em></strong></p><p><strong>前端开发需要的技术</strong></p><ul><li>html5</li><li>css3</li><li>JavaScript</li><li>Bootstrap</li><li>jQuery</li><li>Ajax</li></ul></blockquote><h1 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h1><blockquote><p><strong>HTML(<u>HyperText Mark-up Language</u>)即: 超文本标记语言 .</strong></p></blockquote><h2 id="关于浏览器"><a href="#关于浏览器" class="headerlink" title="关于浏览器"></a>关于浏览器</h2><blockquote><p><u><strong>五大主流浏览器</strong></u></p><p>IE(Internet Explorer) , 火狐(FireFox) , Chrome(谷歌) , Opera(欧朋) , Safari(苹果).</p><p><u><strong>浏览器内核</strong></u></p><ol><li>Trident内核 : 又称IE内核,是微软开发的一种排版引擎 . (使用Trident渲染引擎的浏览器主要有IE,遨游,qq浏览器)</li><li>Gecko内核 : 代表产品Mozila FirefoxGecko是一套c++编写的开源排版引擎. (使用Gecko内核的浏览器主要有Firefox,Netscape 6~9)</li><li>WebKit内核 : 主要用于Mac OS系统代表产品有Safari . (使用WebKit的浏览器主要有Safari和Chrome)</li><li>Presto内核 : 代表产品OperaPresto是由Opera Software开发的浏览器排版引擎,它是世界上公认最快的渲染速度的引擎. 在13年后,Opera宣布加入谷歌阵营,之后弃用.</li><li>Blink内核 : 由Google和Opera Software开发的浏览器排版引擎,13年4月发布 . 现在Chrome和Opera内核都是Blink.</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span><span class="comment">&lt;!--zh-CN表中文--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><span class="comment">&lt;!--网页编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Generator&quot;</span> <span class="attr">content</span>=<span class="string">&quot;webstorm&quot;</span>&gt;</span><span class="comment">&lt;!--开发工具--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Jay_Yue&quot;</span>&gt;</span><span class="comment">&lt;!--作者--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML5,CSS3,jQuery&quot;</span>&gt;</span><span class="comment">&lt;!--关键字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;Description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;是但求其爱&quot;</span>&gt;</span><span class="comment">&lt;!--描述--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML标签及规范<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span><span class="comment">&lt;!--小图标link:favicon--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="comment">&lt;!--引入外部样式--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="comment">/*放css3代码*/</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--主体部分--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">/*放js脚本*/</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>称为根元素,包裹所有网页元素;</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span>文档头部, 头部元素包含<span class="tag">&lt;<span class="name">meta</span>&gt;</span> , <span class="tag">&lt;<span class="name">title</span>&gt;</span> , <span class="tag">&lt;<span class="name">link</span>&gt;</span> , <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    1.<span class="tag">&lt;<span class="name">meta</span>&gt;</span>标签提供关于html文档的元数据.元数据不会显示在页面上,但是对于机器是可读的.</span><br><span class="line">    元数据可用于浏览器(如何显示内容或者重新加载页面),搜索引擎(关键词),或其他web服务.</span><br><span class="line">    2.<span class="tag">&lt;<span class="name">title</span>&gt;</span>定义网页的标题</span><br><span class="line">    3.<span class="tag">&lt;<span class="name">link</span>&gt;</span>引入外部样式</span><br><span class="line">    4.<span class="tag">&lt;<span class="name">style</span>&gt;</span>为html定义样式信息</span><br><span class="line"><span class="xml">    5.<span class="tag">&lt;<span class="name">script</span>&gt;</span>定义页面的脚本内容.</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span> 网页显示的主要内容  </span></span><br></pre></td></tr></table></figure></blockquote><h1 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h1><h2 id="常见双标签"><a href="#常见双标签" class="headerlink" title="常见双标签"></a>常见双标签</h2><h3 id="lt-h1-h6-gt-lt-h1-h6-gt"><a href="#lt-h1-h6-gt-lt-h1-h6-gt" class="headerlink" title="&lt; h1-h6 &gt;&lt; /h1-h6 &gt;"></a>&lt; h1-h6 &gt;&lt; /h1-h6 &gt;</h3><blockquote><p><strong>标题,会自动加粗</strong></p></blockquote><h3 id="lt-div-gt-lt-div-gt"><a href="#lt-div-gt-lt-div-gt" class="headerlink" title="&lt; div &gt;&lt; /div &gt;"></a>&lt; div &gt;&lt; /div &gt;</h3><blockquote><ul><li><strong>主要用于文档布局 , 取代了使用表格布局的老式方法.</strong></li><li><strong>用于组合其他html元素的容器.</strong></li></ul></blockquote><h3 id="lt-p-gt-lt-p-gt"><a href="#lt-p-gt-lt-p-gt" class="headerlink" title="&lt; p &gt;&lt; /p &gt;"></a>&lt; p &gt;&lt; /p &gt;</h3><blockquote><p><strong>定义段落.</strong></p></blockquote><h3 id="lt-a-gt-lt-a-gt"><a href="#lt-a-gt-lt-a-gt" class="headerlink" title="&lt; a &gt;&lt; /a &gt;"></a>&lt; a &gt;&lt; /a &gt;</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接的目标url&quot;</span> <span class="attr">target</span>=<span class="string">&quot;文档重定向&quot;</span>&gt;</span>文字或者图片(img)跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">target=&quot;_blank&quot;   新打开窗口载入</span><br><span class="line">      =&quot;_self&quot;    默认</span><br><span class="line">      =&quot;_parent&quot;    </span><br><span class="line">      =&quot;_top&quot;    </span><br></pre></td></tr></table></figure><h3 id="lt-span-gt-lt-span-gt"><a href="#lt-span-gt-lt-span-gt" class="headerlink" title="&lt; span &gt;&lt; /span &gt;"></a>&lt; span &gt;&lt; /span &gt;</h3><blockquote><p><strong>用来组合文档中的 行内元素 , 可用作文本的容器.</strong></p><p><strong>&lt; span &gt;没有 固定的格式表现,当对其应用样式时,才会产生视觉上的变化.</strong></p></blockquote><h3 id="lt-address-gt-lt-address-gt"><a href="#lt-address-gt-lt-address-gt" class="headerlink" title="&lt; address &gt;&lt; /address &gt;"></a>&lt; address &gt;&lt; /address &gt;</h3><blockquote><p><strong>地址信息</strong></p></blockquote><h3 id="lt-q-gt-lt-q-gt"><a href="#lt-q-gt-lt-q-gt" class="headerlink" title="&lt; q &gt;&lt; /q &gt;"></a>&lt; q &gt;&lt; /q &gt;</h3><blockquote><p><strong>短文本引用 (文本不用加引号,浏览器渲染时会自动加上引号)</strong></p></blockquote><h3 id="lt-caption-gt-lt-caption-gt"><a href="#lt-caption-gt-lt-caption-gt" class="headerlink" title="&lt; caption &gt;&lt; /caption &gt;"></a>&lt; caption &gt;&lt; /caption &gt;</h3><blockquote><p><strong>为表格(table)添加标题和摘要</strong></p></blockquote><h3 id="lt-ul-gt-lt-ul-gt"><a href="#lt-ul-gt-lt-ul-gt" class="headerlink" title="&lt; ul &gt;&lt; /ul &gt;"></a>&lt; ul &gt;&lt; /ul &gt;</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//无序列表 unordered list</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>list1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>list2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>list3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="lt-ol-gt-lt-ol-gt"><a href="#lt-ol-gt-lt-ol-gt" class="headerlink" title="&lt; ol &gt;&lt; /ol &gt;"></a>&lt; ol &gt;&lt; /ol &gt;</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//有序列表 ordered list</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>list1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>list2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>list3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常见单标签"><a href="#常见单标签" class="headerlink" title="常见单标签"></a>常见单标签</h2><h3 id="lt-br-gt"><a href="#lt-br-gt" class="headerlink" title="&lt; br &gt;"></a>&lt; br &gt;</h3><blockquote><p><strong>换行</strong></p></blockquote><h3 id="lt-hr-gt"><a href="#lt-hr-gt" class="headerlink" title="&lt; hr &gt;"></a>&lt; hr &gt;</h3><blockquote><p><strong>分割线</strong></p></blockquote><h3 id="lt-img-gt"><a href="#lt-img-gt" class="headerlink" title="&lt; img &gt;"></a>&lt; img &gt;</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像的url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;代替文本(图像加载不出来时)&quot;</span> <span class="attr">title</span>=<span class="string">&quot;鼠标移动到图片时的提示文字&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h2><h3 id="lt-b-gt-lt-b-gt"><a href="#lt-b-gt-lt-b-gt" class="headerlink" title="&lt; b &gt;&lt; /b &gt;"></a>&lt; b &gt;&lt; /b &gt;</h3><blockquote><p><strong>加粗</strong></p></blockquote><h3 id="lt-strong-gt-lt-strong-gt"><a href="#lt-strong-gt-lt-strong-gt" class="headerlink" title="&lt; strong &gt;&lt; /strong &gt;"></a>&lt; strong &gt;&lt; /strong &gt;</h3><blockquote><p><strong>加粗且强调</strong></p></blockquote><h3 id="lt-i-gt-lt-i-gt"><a href="#lt-i-gt-lt-i-gt" class="headerlink" title="&lt; i &gt;&lt; /i &gt;"></a>&lt; i &gt;&lt; /i &gt;</h3><blockquote><p><strong>倾斜</strong></p></blockquote><h3 id="lt-em-gt-lt-em-gt"><a href="#lt-em-gt-lt-em-gt" class="headerlink" title="&lt; em &gt;&lt; /em &gt;"></a>&lt; em &gt;&lt; /em &gt;</h3><blockquote><p><strong>倾斜且强调</strong></p></blockquote><h3 id="lt-pre-gt-lt-pre-gt"><a href="#lt-pre-gt-lt-pre-gt" class="headerlink" title="&lt; pre &gt;&lt; /pre &gt;"></a>&lt; pre &gt;&lt; /pre &gt;</h3><blockquote><p><strong>预格式化文本 , 即:包裹在pre标签里面的文本 会保留空格和换行符,文本也会呈现等宽字体.</strong></p></blockquote><h3 id="lt-small-gt-lt-small-gt"><a href="#lt-small-gt-lt-small-gt" class="headerlink" title="&lt; small &gt;&lt; /small &gt;"></a>&lt; small &gt;&lt; /small &gt;</h3><blockquote><p><strong>小号字体</strong></p></blockquote><h3 id="lt-sub-gt-lt-sub-gt"><a href="#lt-sub-gt-lt-sub-gt" class="headerlink" title="&lt; sub &gt;&lt; /sub &gt;"></a>&lt; sub &gt;&lt; /sub &gt;</h3><blockquote><p><strong>下标</strong></p></blockquote><h3 id="lt-sup-gt-lt-sup-gt"><a href="#lt-sup-gt-lt-sup-gt" class="headerlink" title="&lt; sup &gt;&lt; /sup &gt;"></a>&lt; sup &gt;&lt; /sup &gt;</h3><blockquote><p><strong>上标</strong></p></blockquote><h2 id="实体转义符"><a href="#实体转义符" class="headerlink" title="实体转义符"></a>实体转义符</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;lt;</span>     <span class="comment">&lt;!--  &lt;  --&gt;</span></span><br><span class="line"><span class="symbol">&amp;gt;</span>  <span class="comment">&lt;!--  &gt;  --&gt;</span></span><br><span class="line"><span class="symbol">&amp;amp;</span> <span class="comment">&lt;!--  &amp;  --&gt;</span></span><br><span class="line"><span class="symbol">&amp;nbsp;</span>   <span class="comment">&lt;!--  空格  --&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span>   <span class="comment">&lt;!--  版权号©  --&gt;</span></span><br><span class="line"><span class="symbol">&amp;times;</span>  <span class="comment">&lt;!--  乘法×  --&gt;</span></span><br><span class="line"><span class="symbol">&amp;divide;</span> <span class="comment">&lt;!--  除法÷  --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="html块级元素和行级元素"><a href="#html块级元素和行级元素" class="headerlink" title="html块级元素和行级元素"></a>html块级元素和行级元素</h2><blockquote><p>根据css规范,每一个网页元素都有一个display属性,用于确定该元素的类型.</p><p>每个元素都有一个默认的display属性值,如div : display=”block” , 即块级元素</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;而span : display=”inline” , 即行级元素.</p><ol><li><p>块级(block)元素:独占一行,可以设置 width,height等属性(宽度没有设置时,默认为100%) 用来搭建网络构架,布局,承载内容等</p></li><li><p>行级(inline)元素(内联元素):不独占一行,相邻的行内元素会排列在同一行里,直到一行排不下才会换行,</p><p>设置width,height等无效. 一般用在网站内容的某处细节,用来”强调,区分样式,上标,下标等”</p><blockquote><ul><li>块元素可以包含 内联元素&amp;某些块元素, 但内联元素只能包含内联元素;</li><li> (部分特殊的块级元素只能包含内联元素,如h1-h6)</li><li> 块级元素与块级元素并列、内嵌元素与内嵌元素并列。</li></ul></blockquote></li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;前端引入&quot;&gt;&lt;a href=&quot;#前端引入&quot; c</summary>
      
    
    
    
    <category term="前端" scheme="https://coincidenceboy.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="html" scheme="https://coincidenceboy.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>动态规划2-背包问题</title>
    <link href="https://coincidenceboy.github.io/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%922-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://coincidenceboy.github.io/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%922-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-24T12:42:15.000Z</published>
    <updated>2021-01-27T09:04:15.830Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;</summary>
      
    
    
    
    <category term="C++" scheme="https://coincidenceboy.github.io/categories/C/"/>
    
    
    <category term="动态规划" scheme="https://coincidenceboy.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>动态规划1-引入</title>
    <link href="https://coincidenceboy.github.io/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/"/>
    <id>https://coincidenceboy.github.io/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/</id>
    <published>2021-01-24T12:41:25.000Z</published>
    <updated>2021-01-27T09:02:09.927Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="例1-爬楼梯"><a href="#例1-爬楼梯" class="headerlink" title="例1-爬楼梯"></a>例1-爬楼梯</h1><p><img src="/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/2.png" alt="image-20210124204929875"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态规划</span></span><br><span class="line"><span class="keyword">int</span> f[N];<span class="comment">//表示走到n阶时的方案数.</span></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1</span>,f[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">    f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line">ans=f[n];</span><br><span class="line"></span><br><span class="line"><span class="comment">//记忆化递归(带备忘的自顶向下法)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(f[n]) <span class="keyword">return</span> f[n];</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> f[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> f[n]=solve(n<span class="number">-1</span>)+solve(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="例2-爬楼梯-进阶"><a href="#例2-爬楼梯-进阶" class="headerlink" title="例2-爬楼梯(进阶)"></a>例2-爬楼梯(进阶)</h1><p><img src="/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/3.png" alt="image-20210124205758352"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> f[N],n,k,m;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="comment">//记录不能落脚的阶梯</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp;<span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">        vis[tmp]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=max(<span class="number">0</span>,i-k);j&lt;=i<span class="number">-1</span>;j++)</span><br><span class="line">            f[i]+=f[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;f[n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于该题的一些思考"><a href="#关于该题的一些思考" class="headerlink" title="关于该题的一些思考"></a>关于该题的一些思考</h2><p><img src="/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/4.png" alt="image-20210124212610017"></p><h1 id="例3-覆盖墙壁"><a href="#例3-覆盖墙壁" class="headerlink" title="例3-覆盖墙壁"></a>例3-覆盖墙壁</h1><p><img src="/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/5.png"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//找规律</span></span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">f[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">f[<span class="number">3</span>]=<span class="number">5</span>;</span><br><span class="line">f[<span class="number">4</span>]=<span class="number">11</span>;</span><br><span class="line">f[<span class="number">5</span>]=<span class="number">24</span>;</span><br><span class="line">不妨猜想:f[i]=<span class="number">2</span>*f[i<span class="number">-1</span>]+f[i<span class="number">-3</span>];</span><br><span class="line">实际验证f[<span class="number">13</span>]=<span class="number">13465</span> 基本确定这个等式是成立的</span><br><span class="line">  问题是 该等式怎么求?</span><br></pre></td></tr></table></figure><p><img src="/2021/01/24/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%921-%E5%BC%95%E5%85%A5/6.png" alt="image-20210124215617285"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;例1-爬楼梯&quot;&gt;&lt;a href=&quot;#例1-爬楼</summary>
      
    
    
    
    <category term="C++" scheme="https://coincidenceboy.github.io/categories/C/"/>
    
    
    <category term="动态规划" scheme="https://coincidenceboy.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>dfs总结</title>
    <link href="https://coincidenceboy.github.io/2021/01/19/dfs%E6%80%BB%E7%BB%93/"/>
    <id>https://coincidenceboy.github.io/2021/01/19/dfs%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-19T12:42:39.000Z</published>
    <updated>2021-01-28T01:17:08.356Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="经典问题"><a href="#经典问题" class="headerlink" title="经典问题"></a>经典问题</h1><h2 id="从n个数中选k个-∑-sum-回溯"><a href="#从n个数中选k个-∑-sum-回溯" class="headerlink" title="从n个数中选k个 ∑=sum (回溯)"></a>从n个数中选k个 ∑=sum (回溯)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归(回溯)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,sum,a[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line"><span class="keyword">int</span> s,ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cnt,<span class="keyword">int</span> i)</span><span class="comment">//cnt选几个 进行到i数组第几位</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s&gt;sum) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(cnt==k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s==sum)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++)</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;v[j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        v.push_back(a[i]); s += a[i];</span><br><span class="line">        dfs(cnt+<span class="number">1</span>,i+<span class="number">1</span>);</span><br><span class="line">        v.pop_back();      s -= a[i];<span class="comment">//回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;sum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    dfs(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;ans:&quot;</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="从n个数中选任意个-∑-sum-递归-01背包"><a href="#从n个数中选任意个-∑-sum-递归-01背包" class="headerlink" title="从n个数中选任意个 ∑=sum (递归 / 01背包)"></a>从n个数中选任意个 ∑=sum (递归 / 01背包)</h2><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归(无回溯)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, sum, a[N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s &gt; sum) <span class="keyword">return</span>;<span class="comment">//if a[i]&gt;0</span></span><br><span class="line">    <span class="keyword">if</span> (i &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s == sum)</span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(i + <span class="number">1</span>, s + a[i]);</span><br><span class="line">    dfs(i + <span class="number">1</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; sum;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//01背包</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">5</span>,SUM=<span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,sum,a[N];</span><br><span class="line"><span class="keyword">int</span> dp[N][SUM];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;sum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="comment">//dp[i][j] 表示仅考虑前i个数,∑为j的方案数</span></span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">        dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=sum;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            dp[i][j]+=dp[i<span class="number">-1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(j-a[i]&gt;=<span class="number">0</span>)</span><br><span class="line">            dp[i][j]+=dp[i<span class="number">-1</span>][j-a[i]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;dp[n][sum]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    滚动数组</span></span><br><span class="line"><span class="comment">    dp[0]=1;</span></span><br><span class="line"><span class="comment">    for(int i=1;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">    for(int j=m;j&gt;=a[i];j--)//逆序 防止覆盖</span></span><br><span class="line"><span class="comment">    dp[j]+=dp[j-a[i]];  //无须dp[i][j]+=dp[i-1][j]; 因为每一重i相当于上一重的继承</span></span><br><span class="line"><span class="comment">cout&lt;&lt;dp[sum]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全排列-permutation"><a href="#全排列-permutation" class="headerlink" title="全排列~permutation"></a>全排列~permutation</h2><p><img src="/2021/01/19/dfs%E6%80%BB%E7%BB%93/2.png" alt="image-20210128082344366"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归(回溯)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">permutation</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=k;i&lt;=m;i++)</span><br><span class="line">    &#123;<span class="comment">//每次循环都是 从第k个开始与后面包括自己的每个位swap</span></span><br><span class="line">        swap(a[i],a[k]);</span><br><span class="line">        permutation(k+<span class="number">1</span>,m);</span><br><span class="line">        swap(a[i],a[k]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    permutation(<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="记忆化递归"><a href="#记忆化递归" class="headerlink" title="记忆化递归"></a>记忆化递归</h2><p><img src="/2021/01/19/dfs%E6%80%BB%E7%BB%93/3.png" alt="image-20210128091417964"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[N][N];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//i表示操作队列还有几个数,j表示栈中有多少数</span></span><br><span class="line">    <span class="keyword">if</span> (f[i][j]) <span class="keyword">return</span> f[i][j];</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (j &gt; <span class="number">0</span>) f[i][j] += dfs(i, j - <span class="number">1</span>);</span><br><span class="line">    f[i][j] += dfs(i - <span class="number">1</span>, j + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> f[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dfs(n, <span class="number">0</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;经典问题&quot;&gt;&lt;a href=&quot;#经典问题&quot; c</summary>
      
    
    
    
    <category term="C++" scheme="https://coincidenceboy.github.io/categories/C/"/>
    
    
    <category term="DFS" scheme="https://coincidenceboy.github.io/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>全排列next_permutation</title>
    <link href="https://coincidenceboy.github.io/2021/01/19/%E5%85%A8%E6%8E%92%E5%88%97next-permutation/"/>
    <id>https://coincidenceboy.github.io/2021/01/19/%E5%85%A8%E6%8E%92%E5%88%97next-permutation/</id>
    <published>2021-01-19T09:31:29.000Z</published>
    <updated>2021-01-20T08:12:55.577Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="next-permutation"><a href="#next-permutation" class="headerlink" title="next_permutation"></a>next_permutation</h1><h2 id="int型全排列"><a href="#int型全排列" class="headerlink" title="int型全排列"></a>int型全排列</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">5</span>] = &#123; <span class="number">0</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span> &#125;;</span><br><span class="line">    sort(a + <span class="number">1</span>, a + <span class="number">1</span> + <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">do</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (next_permutation(a + <span class="number">1</span>, a + <span class="number">1</span> + <span class="number">4</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串全排列"><a href="#字符串全排列" class="headerlink" title="字符串全排列"></a>字符串全排列</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    sort(s.begin(), s.end());</span><br><span class="line">    <span class="keyword">do</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= s.size(); i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; s[i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (next_permutation(s.begin(), s.end()));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2021/01/19/%E5%85%A8%E6%8E%92%E5%88%97next-permutation/2.png" alt="image-20210119192529699" style="zoom:67%;"><img src="/2021/01/19/%E5%85%A8%E6%8E%92%E5%88%97next-permutation/3.png" alt="image-20210119192709936" style="zoom: 80%;"><blockquote><p>参考博客 — <a href="https://www.luogu.com.cn/blog/yummy-loves-114514/solution-p1088">火星人-变进制数</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">a[<span class="number">7</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;组成的序列可以看成一个变进制数</span><br><span class="line">进制从高到低 依次为 <span class="number">7</span>-&gt;<span class="number">6</span>-&gt;<span class="number">5</span>-&gt;<span class="number">4</span>-&gt;<span class="number">3</span>-&gt;<span class="number">2</span>-&gt;<span class="number">1</span> <span class="comment">//1进制只有0</span></span><br><span class="line"> 对应的权重 依次为 <span class="number">6</span>! <span class="number">5</span>! <span class="number">4</span>! <span class="number">3</span>! <span class="number">2</span>! <span class="number">1</span>! <span class="number">0</span></span><br><span class="line"><span class="comment">//****************************************************************</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">5</span>; </span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N]; </span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">int</span> x=a[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=a[i];j++)</span><br><span class="line">            x-=vis[j];</span><br><span class="line">        vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">        a[i]=x<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[n]+=m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i<span class="number">-1</span>]+=a[i]/(n-i+<span class="number">1</span>);</span><br><span class="line">        a[i]%=n-i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=a[i];j++)</span><br><span class="line">            <span class="keyword">if</span>(vis[j])</span><br><span class="line">                a[i]++;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i]+<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        vis[a[i]]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;next-permutation&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="C++" scheme="https://coincidenceboy.github.io/categories/C/"/>
    
    
    <category term="STL" scheme="https://coincidenceboy.github.io/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>算法导论</title>
    <link href="https://coincidenceboy.github.io/2020/12/29/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    <id>https://coincidenceboy.github.io/2020/12/29/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/</id>
    <published>2020-12-29T12:07:03.000Z</published>
    <updated>2020-12-29T13:37:09.927Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="CH23-最小生成树"><a href="#CH23-最小生成树" class="headerlink" title="CH23 最小生成树"></a>CH23 最小生成树</h1><h2 id="Prim算法"><a href="#Prim算法" class="headerlink" title="Prim算法"></a>Prim算法</h2><blockquote><p>Prim算法的关键在于 : 维护一个点集 A 并且集合A的边总是构成一棵树(这棵树从任意节点 r 开始<strong>一直长大到覆盖V中所有节点</strong>为止)</p><ul><li>算法的每一步在连接集合A和V-A的节点的所有的边中,选择一条轻量级边加入A中.</li><li>根据推论23.2,这条规则加入的边都是对A安全的边.</li></ul></blockquote><p><img src="/2020/12/29/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/4.png" alt="image-20201229213431037"></p><h3 id="伪码实现-MST-Prim-G-w-r"><a href="#伪码实现-MST-Prim-G-w-r" class="headerlink" title="伪码实现 MST-Prim(G,w,r)"></a>伪码实现 MST-Prim(G,w,r)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> each u∈G.V</span><br><span class="line">    u.key=∞</span><br><span class="line">    u.π=NUL</span><br><span class="line">r.key=<span class="number">0</span></span><br><span class="line">Q=G.V</span><br><span class="line"><span class="keyword">while</span> Q≠∅</span><br><span class="line">    u=extract-min(Q)</span><br><span class="line">    <span class="keyword">for</span> each v∈G.Adj[u]</span><br><span class="line">    <span class="keyword">if</span> v∈Q <span class="keyword">and</span> w(u,v) &lt; v.key</span><br><span class="line">        v.π=u</span><br><span class="line">        v.key=w(u,v)</span><br><span class="line">******************************</span><br><span class="line">其实注意到队列Q也是每个节点只弹出一次,也就是说 节点被弹出一次后 后续再将该节点入队/更新等操作都没有关系</span><br><span class="line">所以上述伪代码第<span class="number">9</span>行可以去掉条件v∈Q 只保留 <span class="keyword">if</span> w(u,v) &lt; v.key</span><br><span class="line">    这样的话 跟Dijstra伪码是一致的</span><br><span class="line"><span class="comment">//注意算法第5行之后,我们不会再向队列Q中insert节点,即每个节点加入队列和被抽取的次数均1次.</span></span><br><span class="line"><span class="comment">//但是具体实现的时候,去更新已经入队的元素的关键字不易,我们可以在每次更新的时候都插入一次(相当于更新操作),</span></span><br><span class="line"><span class="comment">//但是只从队列中抽取一次.</span></span><br></pre></td></tr></table></figure><hr><h1 id="CH24-单源最短路"><a href="#CH24-单源最短路" class="headerlink" title="CH24 单源最短路"></a>CH24 单源最短路</h1><h2 id="Dijkstra算法"><a href="#Dijkstra算法" class="headerlink" title="Dijkstra算法"></a>Dijkstra算法</h2><blockquote><p>Dijkstra算法的关键在于 : 维护一个点集 S</p><ul><li>点集S : 从源点s到该点集中任意节点之间的最短路径已经找到 . 同样de , 点集 V-S 中任意一点u dis[u]也表示s到u的最短路径 (<strong>但该最短路径仅经过集合S中的点</strong>)</li><li>算法重复从节点集 V-S 中选择最短路径估计最小的节点u加入集合S , 并且对所有从u出发的边进行松弛操作.</li></ul></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">initialize-single-source(G,s)</span><br><span class="line"><span class="keyword">for</span> each vertex v∈G,V</span><br><span class="line">    v.d=∞</span><br><span class="line">    v.π=NIL</span><br><span class="line">s.d=<span class="number">0</span></span><br><span class="line">*****************************</span><br><span class="line">relax(u,v,w)</span><br><span class="line"><span class="keyword">if</span> v.d&gt;u.d+w</span><br><span class="line">    v.d=u.d+w</span><br><span class="line">    v.π=u</span><br><span class="line">*****************************</span><br></pre></td></tr></table></figure><h3 id="伪码实现"><a href="#伪码实现" class="headerlink" title="伪码实现"></a>伪码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">initialize-single-source(G,s)</span><br><span class="line">S=∅</span><br><span class="line">Q=G.V</span><br><span class="line"><span class="keyword">while</span> Q≠∅</span><br><span class="line">    u=extract-min(Q) <span class="comment">//从堆Q中删除最小关键字的元素(每个节点的关键字为其d值</span></span><br><span class="line">    S=S∪&#123;u&#125;</span><br><span class="line">    <span class="keyword">for</span> each vertex v∈G.Adj[u]</span><br><span class="line">        relax(u,v,w) <span class="comment">//relax的时候优先队列Q里的关键字相应的改变</span></span><br><span class="line"><span class="comment">//注意算法第3行之后,我们不会再向队列Q中insert节点,即每个节点加入队列和被抽取的次数均1次.</span></span><br><span class="line"><span class="comment">//但是具体实现的时候,去更新已经入队的元素的关键字不易,我们可以在每次更新的时候都插入一次(相当于更新操作),</span></span><br><span class="line"><span class="comment">//但是只从队列中抽取一次.</span></span><br></pre></td></tr></table></figure><h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p><img src="/2020/12/29/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/3.png" alt="image-20201229210326024"></p><p><img src="/2020/12/29/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/2.png" alt="image-20201229210546920"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;CH23-最小生成树&quot;&gt;&lt;a href=&quot;#C</summary>
      
    
    
    
    <category term="C++" scheme="https://coincidenceboy.github.io/categories/C/"/>
    
    
    <category term="算法导论" scheme="https://coincidenceboy.github.io/tags/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>强连通分量Kosaraju</title>
    <link href="https://coincidenceboy.github.io/2020/12/27/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8FKosaraju/"/>
    <id>https://coincidenceboy.github.io/2020/12/27/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8FKosaraju/</id>
    <published>2020-12-27T04:36:59.000Z</published>
    <updated>2020-12-27T14:11:31.937Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="DFS后序"><a href="#DFS后序" class="headerlink" title="DFS后序"></a>DFS后序</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> d[N], f[N], dcnt, fcnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[u] = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//原本d[u]=++time;记录的是发现时间</span></span><br><span class="line">    d[++dcnt] = u;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].v;</span><br><span class="line">        <span class="keyword">if</span> (!vis[v])</span><br><span class="line">            dfs(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//原本f[u]=++time;记录的是完成时间</span></span><br><span class="line">    f[++fcnt] = u;<span class="comment">//dfs后序,相当于是按完成时间小--&gt;大依次存储</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//省略点,边的声明</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            dfs(i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="强连通分量-SCC"><a href="#强连通分量-SCC" class="headerlink" title="强连通分量(SCC)"></a>强连通分量(SCC)</h1><blockquote><p>相关概念:</p><ul><li>强连通:有向图G中任意两点u–&gt;v v–&gt;u都可达.</li><li>强连通分量(scc):极大的强连通子图</li></ul></blockquote><img src="/2020/12/27/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8FKosaraju/2.png" alt="image-20201227140143478" style="zoom:80%;"><h2 id="Kosaraju板子"><a href="#Kosaraju板子" class="headerlink" title="Kosaraju板子"></a>Kosaraju板子</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//所有数组的下标均从1开始</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="comment">//链式前向星</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, next;</span><br><span class="line">&#125;e1[M], e2[M];</span><br><span class="line"><span class="keyword">int</span> cnt1, cnt2, head1[N], head2[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt1++;</span><br><span class="line">    e1[cnt1].v = v, e1[cnt1].next = head1[u];</span><br><span class="line">    head1[u] = cnt1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt2++;</span><br><span class="line">    e2[cnt2].v = v, e2[cnt2].next = head2[u];</span><br><span class="line">    head2[u] = cnt2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//kosaraju-dfs</span></span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> f[N], fcnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[u] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head1[u]; ~i; i = e1[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e1[i].v;</span><br><span class="line">        <span class="keyword">if</span> (!vis[v])</span><br><span class="line">            dfs1(v);</span><br><span class="line">    &#125;</span><br><span class="line">    f[++fcnt] = u;<span class="comment">//dfs后序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> snum[N];<span class="comment">//snum[i]记录:节点i 所在的scc的序号</span></span><br><span class="line"><span class="keyword">int</span> scc[N], scnt;<span class="comment">//scnt--&gt;scc计数器 scc[i]--&gt;第i个scc里包含节点数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    snum[u] = scnt;</span><br><span class="line">    scc[scnt]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head2[u]; ~i; i = e2[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e2[i].v;</span><br><span class="line">        <span class="keyword">if</span> (!snum[v])</span><br><span class="line">            dfs2(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kosaraju</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//第一遍dfs---&gt;生成dfs后序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) dfs1(i);</span><br><span class="line">    <span class="comment">//第二遍dfs---&gt;在反图中按dfs逆后序 遍历构成SCC</span></span><br><span class="line">    <span class="comment">//逆后序起到了类似 拓扑序 的作用</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (!snum[f[i]])</span><br><span class="line">            scnt++, dfs2(f[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//链式前向星-初始化</span></span><br><span class="line">    cnt1 = <span class="number">0</span>, cnt2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head1, <span class="number">-1</span>, <span class="keyword">sizeof</span> head1);</span><br><span class="line">    <span class="built_in">memset</span>(head2, <span class="number">-1</span>, <span class="keyword">sizeof</span> head2);</span><br><span class="line">    <span class="comment">//kosaraju--dfs-初始化</span></span><br><span class="line">    fcnt = <span class="number">0</span>, scnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">memset</span>(scc, <span class="number">0</span>, <span class="keyword">sizeof</span> scc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题–班长竞选"><a href="#例题–班长竞选" class="headerlink" title="例题–班长竞选"></a>例题–班长竞选</h2><p><img src="/2020/12/27/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8FKosaraju/3.png" alt="image-20201227151059804"></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><blockquote><p>有向图通常<strong>考虑SCC并缩点</strong>,即将<strong>互相可达 与 单向可达 分开考虑.</strong></p><ul><li>缩点后,不难发现对于 属于第i个SCC的点来说 , 票数的构成分为两部分(令SCC[i]表示第i个SCC中点的个数)<ol><li>当前SCC中的点, ans += SCC[I] - 1;(去掉自己)</li><li>其他SCC中的点, ans += sum(SCC[j]) 其中 j—&gt;i 可达</li></ol></li><li>稍加思考可以发现,<strong>缩点后变成一个DAG(有向无环图)</strong>,最后答案一定出现在 <strong>出度为0</strong> 的 SCC中,因为具有传递性, 所以 如果出度不为0,你指向的SCC会继承你之前的票数并加上你本身</li></ul></blockquote><blockquote><p>对于ans如何求取比较方便?</p><ol><li>缩点之后,将图反向   (或者 直接<strong>在反图中缩点</strong>)</li><li>原本答案出现在 <strong>出度为0</strong> 的SCC们 变成了 <strong>入度为0</strong> 的SCC们 , 用dfs搜一遍 并且记录 个数.</li></ol></blockquote><p><img src="/2020/12/27/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8FKosaraju/4.png" alt="image-20201227160022311"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5005</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">50005</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="comment">//链式前向星</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, next;</span><br><span class="line">&#125;e1[M], e2[M], e[M];</span><br><span class="line"><span class="keyword">int</span> cnt1, cnt2, head1[N], head2[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add1</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt1++;</span><br><span class="line">    e1[cnt1].v = v, e1[cnt1].next = head1[u];</span><br><span class="line">    head1[u] = cnt1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add2</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt2++;</span><br><span class="line">    e2[cnt2].v = v, e2[cnt2].next = head2[u];</span><br><span class="line">    head2[u] = cnt2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//kosaraju-dfs</span></span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> f[N], fcnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vis[u] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head1[u]; ~i; i = e1[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e1[i].v;</span><br><span class="line">        <span class="keyword">if</span> (!vis[v])</span><br><span class="line">            dfs1(v);</span><br><span class="line">    &#125;</span><br><span class="line">    f[++fcnt] = u;<span class="comment">//f[1到fcnt]记录dfs后序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> snum[N];<span class="comment">//snum[i]记录:节点i 所在的scc的序号</span></span><br><span class="line"><span class="keyword">int</span> scc[N], scnt;<span class="comment">//scnt--&gt;scc计数器 scc[i]--&gt;第i个scc里包含节点数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    snum[u] = scnt;</span><br><span class="line">    scc[scnt]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head2[u]; ~i; i = e2[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e2[i].v;</span><br><span class="line">        <span class="keyword">if</span> (!snum[v])</span><br><span class="line">            dfs2(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kosaraju</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//第一遍dfs---&gt;生成dfs后序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) dfs1(i);</span><br><span class="line">    <span class="comment">//第二遍dfs---&gt;在反图中按dfs逆后序 遍历构成SCC</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (!snum[f[i]])</span><br><span class="line">            scnt++, dfs2(f[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt, head[N], in_deg[N];</span><br><span class="line"><span class="comment">//缩点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt++;</span><br><span class="line">    e[cnt].v = v, e[cnt].next = head[u];</span><br><span class="line">    head[u] = cnt;</span><br><span class="line">    in_deg[v]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shrink</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = head2[i]; ~j; j = e2[j].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v = e2[j].v;</span><br><span class="line">            <span class="keyword">if</span> (snum[i] == snum[v])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            add(snum[i], snum[v]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//dfs计算票数</span></span><br><span class="line"><span class="keyword">int</span> temp, ans[N];</span><br><span class="line"><span class="keyword">bool</span> flag[N];<span class="comment">//用于dfs搜索</span></span><br><span class="line"><span class="keyword">bool</span> maxscc[N];<span class="comment">//用于标记scc 是不是最多票数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    temp += scc[u];</span><br><span class="line">    flag[u] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = e[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v = e[i].v;</span><br><span class="line">        <span class="keyword">if</span> (!flag[v]) dfs(v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//链式前向星-初始化</span></span><br><span class="line">    cnt1 = <span class="number">0</span>, cnt2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head1, <span class="number">-1</span>, <span class="keyword">sizeof</span> head1);</span><br><span class="line">    <span class="built_in">memset</span>(head2, <span class="number">-1</span>, <span class="keyword">sizeof</span> head2);</span><br><span class="line">    <span class="comment">//缩点建新图-初始化</span></span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="built_in">memset</span>(in_deg, <span class="number">0</span>, <span class="keyword">sizeof</span> in_deg);</span><br><span class="line">    <span class="comment">//kosaraju  dfs-初始化</span></span><br><span class="line">    fcnt = <span class="number">0</span>, scnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">memset</span>(scc, <span class="number">0</span>, <span class="keyword">sizeof</span> scc);</span><br><span class="line">    <span class="built_in">memset</span>(snum, <span class="number">0</span>, <span class="keyword">sizeof</span> snum);</span><br><span class="line">    <span class="comment">//计算票数</span></span><br><span class="line">    temp = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(flag, <span class="number">0</span>, <span class="keyword">sizeof</span> flag);</span><br><span class="line">    <span class="built_in">memset</span>(ans, <span class="number">0</span>, <span class="keyword">sizeof</span> ans);</span><br><span class="line">    <span class="built_in">memset</span>(maxscc, <span class="number">0</span>, <span class="keyword">sizeof</span> maxscc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> t; <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">int</span> case_num = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">while</span> (m--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u, v;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">            u++, v++;<span class="comment">//将节点0到n-1 转化为 1到n</span></span><br><span class="line">            add1(u, v);</span><br><span class="line">            add2(v, u);</span><br><span class="line">        &#125;</span><br><span class="line">        kosaraju();</span><br><span class="line">        <span class="comment">//此时snum[i]记录:节点i 所在的scc的序号</span></span><br><span class="line">        <span class="comment">//scnt--&gt;scc计数器 scc[i]--&gt;第i个scc里包含节点数</span></span><br><span class="line">        shrink();<span class="comment">//在反图中缩点</span></span><br><span class="line">        <span class="comment">//此时节点从1-n变为1-scnt 边数(cnt)仅包含 不同scc之间的边(节点1到节点scnt之间相连)</span></span><br><span class="line">        <span class="comment">//in_deg[1-scnt] 记录了新图节点的入度</span></span><br><span class="line">        <span class="keyword">int</span> maxans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= scnt; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (in_deg[i] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">memset</span>(flag, <span class="number">0</span>, <span class="keyword">sizeof</span> flag);</span><br><span class="line">                dfs(i);</span><br><span class="line">                ans[i] = (temp - <span class="number">1</span>);</span><br><span class="line">                maxans = max(ans[i], maxans);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= scnt; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ans[i] == maxans)</span><br><span class="line">                maxscc[i] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Case &quot;</span> &lt;&lt; case_num++ &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; maxans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">bool</span> space = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxscc[snum[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!space)</span><br><span class="line">                    space = <span class="literal">true</span>, <span class="built_in">cout</span> &lt;&lt; i - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;DFS后序&quot;&gt;&lt;a href=&quot;#DFS后序&quot;</summary>
      
    
    
    
    <category term="图论" scheme="https://coincidenceboy.github.io/categories/%E5%9B%BE%E8%AE%BA/"/>
    
    
    <category term="强连通分量" scheme="https://coincidenceboy.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>B样条</title>
    <link href="https://coincidenceboy.github.io/2020/12/23/B%E6%A0%B7%E6%9D%A1/"/>
    <id>https://coincidenceboy.github.io/2020/12/23/B%E6%A0%B7%E6%9D%A1/</id>
    <published>2020-12-23T09:32:04.000Z</published>
    <updated>2020-12-23T10:14:49.559Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js"></script><h1 id="B样条"><a href="#B样条" class="headerlink" title="B样条"></a>B样条</h1><h2 id="原理讲解"><a href="#原理讲解" class="headerlink" title="原理讲解"></a>原理讲解</h2><p><img src="/2020/12/23/B%E6%A0%B7%E6%9D%A1/2.png" alt="image-20201223175754930"></p><p><img src="/2020/12/23/B%E6%A0%B7%E6%9D%A1/3.png" alt="image-20201223175843274"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="main-cpp"><a href="#main-cpp" class="headerlink" title="main.cpp"></a>main.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;struct.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> site_left = <span class="number">1020</span>;</span><br><span class="line"><span class="keyword">int</span> site_top = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> WinW = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">int</span> WinH = <span class="number">450</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;point&gt; input;</span><br><span class="line"><span class="keyword">int</span> nowid;<span class="comment">//用于鼠标移动</span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">3</span>;<span class="comment">//定义阶数k=3阶  k-1次</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> tx, <span class="keyword">int</span> ty)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">15</span>;</span><br><span class="line">    <span class="keyword">int</span> x = input[i].x, y = input[i].y;</span><br><span class="line">    <span class="keyword">if</span> (tx &gt;= x - num &amp;&amp; tx &lt;= x + num &amp;&amp; ty &gt;= y - num &amp;&amp; ty &lt;= y + num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glClearColor(<span class="number">200.0</span> / <span class="number">255</span>, <span class="number">200.0</span> / <span class="number">255</span>, <span class="number">169.0</span> / <span class="number">255</span>, <span class="number">0.0</span>);<span class="comment">//设定清理颜色</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);<span class="comment">//清理缓冲区 </span></span><br><span class="line"></span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawOnePoint</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glColor3f(<span class="number">131.0</span> / <span class="number">255</span>, <span class="number">175.0</span> / <span class="number">255</span>, <span class="number">155.0</span> / <span class="number">255</span>);</span><br><span class="line">    glPointSize(<span class="number">4</span>);</span><br><span class="line">    glBegin(GL_POINTS);</span><br><span class="line">    glVertex2d(x, y);</span><br><span class="line">    glEnd();</span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawLine</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> y1, <span class="keyword">int</span> x2, <span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glColor3f(<span class="number">131.0</span> / <span class="number">255</span>, <span class="number">175.0</span> / <span class="number">255</span>, <span class="number">155.0</span> / <span class="number">255</span>);</span><br><span class="line">    glEnable(GL_LINE_SMOOTH);</span><br><span class="line">    glLineWidth(<span class="number">1</span>);</span><br><span class="line">    glBegin(GL_LINES);</span><br><span class="line">    glVertex2i(x1, y1);</span><br><span class="line">    glVertex2i(x2, y2);</span><br><span class="line">    glEnd();</span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">redraw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//缓冲区重绘</span></span><br><span class="line">    glClearColor(<span class="number">200.0</span> / <span class="number">255</span>, <span class="number">200.0</span> / <span class="number">255</span>, <span class="number">169.0</span> / <span class="number">255</span>, <span class="number">0.0</span>);<span class="comment">//设定清理颜色</span></span><br><span class="line">    glClear(GL_COLOR_BUFFER_BIT);</span><br><span class="line">    <span class="comment">//控制点重绘</span></span><br><span class="line">    glColor3f(<span class="number">131.0</span> / <span class="number">255</span>, <span class="number">175.0</span> / <span class="number">255</span>, <span class="number">155.0</span> / <span class="number">255</span>);</span><br><span class="line">    glPointSize(<span class="number">4</span>);</span><br><span class="line">    glBegin(GL_POINTS);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= input.size() - <span class="number">1</span>; i++)</span><br><span class="line">        glVertex2d(input[i].x, input[i].y);</span><br><span class="line">    glEnd();</span><br><span class="line">    <span class="comment">//特征多边形重绘</span></span><br><span class="line">    glLineWidth(<span class="number">1</span>);</span><br><span class="line">    glBegin(GL_LINES);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= input.size() - <span class="number">1</span>; i++)</span><br><span class="line">        drawLine(input[i - <span class="number">1</span>].x, input[i - <span class="number">1</span>].y, input[i].x, input[i].y);</span><br><span class="line">    glEnd();</span><br><span class="line"></span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">de_Boor</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">de_Boor_id</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mouseClick</span><span class="params">(<span class="keyword">int</span> button, <span class="keyword">int</span> state, <span class="keyword">int</span> nowx, <span class="keyword">int</span> nowy)</span> <span class="comment">//x,y均是以窗口左上角为（0,0）的像素表示</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    x = nowx, y = WinH - nowy;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (check(i, x, y))</span><br><span class="line">        &#123;</span><br><span class="line">            id = i; <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//insert</span></span><br><span class="line">    <span class="keyword">if</span> (button == GLUT_LEFT_BUTTON &amp;&amp; state == GLUT_DOWN)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            drawOnePoint(x, y);</span><br><span class="line">            input.push_back(point(x, y));</span><br><span class="line">            nowid = input.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (nowid &gt;= <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                drawLine(input[nowid - <span class="number">1</span>].x, input[nowid - <span class="number">1</span>].y, input[nowid].x, input[nowid].y);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (input.size() &gt;= k) de_Boor();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> nowid = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//画出B样条</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (button == GLUT_MIDDLE_BUTTON &amp;&amp; state == GLUT_DOWN)</span><br><span class="line">    &#123;</span><br><span class="line">        redraw();</span><br><span class="line">        <span class="keyword">if</span> (input.size() &gt;= k) de_Boor();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// delete</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (button == GLUT_RIGHT_BUTTON &amp;&amp; state == GLUT_DOWN)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (id != <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            nowid = id;</span><br><span class="line">            input.erase(input.begin() + nowid);</span><br><span class="line">            redraw();</span><br><span class="line">            <span class="keyword">if</span> (input.size() &gt;= k) </span><br><span class="line">                de_Boor();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mouseMotion</span><span class="params">(<span class="keyword">int</span> nowx, <span class="keyword">int</span> nowy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = nowx, y = WinH - nowy;</span><br><span class="line">    input[nowid].x = x, input[nowid].y = y;</span><br><span class="line">    <span class="keyword">if</span> (input.size() &gt;= k)</span><br><span class="line">    &#123;</span><br><span class="line">        redraw();</span><br><span class="line">        de_Boor();</span><br><span class="line">        de_Boor_id(nowid);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">keyBoards</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> key, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (key == <span class="number">107</span>||key == <span class="number">75</span>) <span class="comment">//k || K</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入k值:&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">        <span class="keyword">if</span> (input.size() &gt;= k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;B样条已重绘&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            redraw();</span><br><span class="line">            de_Boor();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);<span class="comment">//显示窗口的缓存和颜色模型</span></span><br><span class="line">    glutInitWindowPosition(site_left, site_top);</span><br><span class="line">    glutInitWindowSize(WinW, WinH);</span><br><span class="line">    glutCreateWindow(<span class="string">&quot;交互贝塞尔曲线-Bezier&quot;</span>); <span class="comment">//创建带标题的窗口</span></span><br><span class="line">    gluOrtho2D(<span class="number">0</span>, WinW, <span class="number">0</span>, WinH);<span class="comment">// 区域大小定义  窗口的左下角是（0，0）</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; 鼠标左键点击  -----&gt; 绘制特征多边形&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;   鼠标中键    -----&gt; 画出B样条曲线&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;   鼠标右键    -----&gt; 删除指向特征点&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot; 鼠标左键拖拽  -----&gt; 重绘B样条曲线&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;键盘输入k或者K -----&gt; 指定k值并重绘&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    glutDisplayFunc(&amp;display);<span class="comment">//事件1：显示函数</span></span><br><span class="line">    glutMouseFunc(mouseClick);<span class="comment">//事件2：鼠标点击</span></span><br><span class="line">    glutMotionFunc(mouseMotion);<span class="comment">//事件3：鼠标移动</span></span><br><span class="line">    glutKeyboardFunc(&amp;keyBoards);<span class="comment">//事件4：监听键盘</span></span><br><span class="line">    glutMainLoop();<span class="comment">//让事件保持循环</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="struct-h"><a href="#struct-h" class="headerlink" title="struct.h"></a>struct.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;gl/glut.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    point() &#123; x = <span class="number">-1</span>, y = <span class="number">-1</span>; &#125;</span><br><span class="line">    point(<span class="keyword">double</span> x1, <span class="keyword">double</span> y1) &#123; x = x1, y = y1; &#125;</span><br><span class="line">    point <span class="keyword">operator</span> * (<span class="keyword">double</span> t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> point(t * x, t * y);</span><br><span class="line">    &#125;</span><br><span class="line">    point <span class="keyword">operator</span> + (point p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> point(x + p.x, y + p.y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="B样条-cpp"><a href="#B样条-cpp" class="headerlink" title="B样条.cpp"></a>B样条.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&quot;struct.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">extern</span> <span class="built_in">vector</span>&lt;point&gt;input;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; T;</span><br><span class="line"><span class="built_in">vector</span>&lt;point&gt; P;</span><br><span class="line"><span class="built_in">vector</span>&lt;point&gt; ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_Bline</span><span class="params">(<span class="built_in">vector</span>&lt;point&gt; out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    glColor3f(<span class="number">252.0</span> / <span class="number">255</span>, <span class="number">157.0</span> / <span class="number">255</span>, <span class="number">154.0</span> / <span class="number">255</span>);</span><br><span class="line">    glPointSize(<span class="number">1</span>);</span><br><span class="line">    glBegin(GL_POINTS);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; out.size(); i++)</span><br><span class="line">        glVertex2d(out[i].x, out[i].y);</span><br><span class="line">    glEnd();</span><br><span class="line">    glFlush();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">de_Boor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;point&gt; next;</span><br><span class="line">    T.clear(); ans.clear(); P.clear();</span><br><span class="line">    point tmp;</span><br><span class="line">    <span class="keyword">int</span> n = input.size()<span class="number">-1</span>; </span><br><span class="line">    <span class="comment">//所以控制点数为 n+1</span></span><br><span class="line">    <span class="comment">//区间均匀B样条</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + k; i++) </span><br><span class="line">        T.push_back(i);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = k - <span class="number">1</span>; j &lt;= n; j++)<span class="comment">//枚举区间j </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span> t = T[j]; t &lt; T[j + <span class="number">1</span>]; t += <span class="number">0.001</span>) <span class="comment">//先把t固定在区间[t j,t j+1]上</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//r=0时,0次Pi(t) = p[i]  并且  i= j - k + 1; i &lt;= j</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = j - k + <span class="number">1</span>; i &lt;= j; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                P.push_back(input[i]);</span><br><span class="line">            &#125; </span><br><span class="line">            <span class="comment">//r= 1 到 k-1 时,即r次Pi(t)</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">1</span>; r &lt;= k - <span class="number">1</span>; r++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = j - k + r + <span class="number">1</span>; i &lt;= j; i++) </span><br><span class="line">                &#123;</span><br><span class="line">                    tmp = P[i - (j - k + r + <span class="number">1</span>) + <span class="number">1</span>] * ((t - T[i]) / (T[i + k - r] - T[i])) + P[i - (j - k + r + <span class="number">1</span>)] * ((T[i + k - r] - t) / (T[i + k - r] - T[i])); <span class="comment">//* (p[i + 1][r - 1]);</span></span><br><span class="line">                    next.push_back(tmp);</span><br><span class="line">                &#125;</span><br><span class="line">                P = next;</span><br><span class="line">                next.clear();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//最后为r次P</span></span><br><span class="line">            ans.push_back(P[<span class="number">0</span>]);</span><br><span class="line">            P.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    draw_Bline(ans);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">de_Boor_id</span><span class="params">(<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;point&gt; next;</span><br><span class="line">    ans.clear();</span><br><span class="line">    point tmp;</span><br><span class="line">    <span class="keyword">int</span> n = input.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//所以控制点数为 n+1</span></span><br><span class="line">    <span class="keyword">int</span> a = max(id, k - <span class="number">1</span>), b = min(id + k - <span class="number">1</span>, n);</span><br><span class="line">    <span class="comment">//会影响到的区间数目</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = a; j &lt;= b; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">double</span> t = T[j]; t &lt; T[j + <span class="number">1</span>]; t += <span class="number">0.001</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = j - k + <span class="number">1</span>; i &lt;= j; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                P.push_back(input[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">1</span>; r &lt;= k - <span class="number">1</span>; r++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = j - k + r + <span class="number">1</span>; i &lt;= j; i++) &#123;</span><br><span class="line">                    tmp = P[i - (j - k + r + <span class="number">1</span>) + <span class="number">1</span>] * ((t - T[i]) / (T[i + k - r] - T[i])) + P[i - (j - k + r + <span class="number">1</span>)] * ((T[i + k - r] - t) / (T[i + k - r] - T[i])); <span class="comment">//* (p[i + 1][r - 1]);</span></span><br><span class="line">                    next.push_back(tmp);</span><br><span class="line">                &#125;</span><br><span class="line">                P = next;</span><br><span class="line">                next.clear();</span><br><span class="line">            &#125;</span><br><span class="line">            ans.push_back(P[<span class="number">0</span>]);</span><br><span class="line">            P.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    draw_Bline(ans);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;script src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/mouse_snow.min.js&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;B样条&quot;&gt;&lt;a href=&quot;#B样条&quot; cla</summary>
      
    
    
    
    <category term="opengl图形学" scheme="https://coincidenceboy.github.io/categories/opengl%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
    <category term="B样条" scheme="https://coincidenceboy.github.io/tags/B%E6%A0%B7%E6%9D%A1/"/>
    
  </entry>
  
</feed>
